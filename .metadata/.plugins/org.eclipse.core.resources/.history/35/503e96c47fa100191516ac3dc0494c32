package pack;
import java.awt.Robot;
import java.awt.event.KeyEvent;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.concurrent.TimeUnit;

import org.openqa.selenium.*;
import org.openqa.selenium.ie.InternetExplorerDriver;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

import com.relevantcodes.extentreports.ExtentReports;
import com.relevantcodes.extentreports.ExtentTest;
import com.relevantcodes.extentreports.LogStatus;
public class sample extends AA_CO_ILP{

	@Test(priority=0,groups = "venkat_Oh_ILP")
	 
	 public void Login_Homescreen_Borrower_Registration_NewLoan_verify_() throws Exception {

			// Start test. Mention test script name
			String FileName= "AA_Login_Homescreen_Borrower_Registration_NewLoan_verify_TestData.xls";
			Excel TestData = new Excel("E:/QC_Workspace/AA_Automation/TestData/OH_ILP/Local/"+FileName);  
			int lastrow=TestData.getLastRow("NewLoan");
			String sheetName="NewLoan";   
			//int lastrow=TestData.getLastRow("Borrower");
			System.out.println(lastrow);
			for(int row=2;row<=lastrow;row++)
			{
				String RunFlag = TestData.getCellData(sheetName,"Run",row);
				//System.out.println(RunFlag);
			if(RunFlag.equals("Y"))
			{	
				//driver.get(appUrl);
				//test.log(LogStatus.INFO, "Application is launched");
				//driver.manage().window().maximize();
					String AppURL = TestData.getCellData(sheetName,"AppURL",row);
					String UserName = TestData.getCellData(sheetName,"UserName",row);
					String Password = TestData.getCellData(sheetName,"Password",row);
			       // System.out.println(Password);
			        String StoreId = TestData.getCellData(sheetName,"StoreID",row);
			        String ProductID = TestData.getCellData(sheetName,"ProductID",row);
			        String StateID = TestData.getCellData(sheetName,"StateID",row);
			        String SSN = TestData.getCellData(sheetName,"SSN",row);	
			        String PayFrequency = TestData.getCellData(sheetName,"Income_PayFrequency",row);
					String CollateralType = TestData.getCellData(sheetName,"ESign_CollateralType",row);
			        String Header = StateID+ "_" + ProductID;
			        //System.out.println(SSN);
			        test = reports.startTest(Header+"_S.No:01"+"_"+PayFrequency+"_"+CollateralType, "Login_ Home screen_ Borrower _Registration_New loan_verifyOrigination fee and MHC fee");
			        appUrl = AppURL;

			        CSRLoginpage login = new CSRLoginpage();
			        login.Login(UserName, Password, StoreId, driver, AppURL, test);
			        this.RegistrationPage_NewLoan_ILP(driver, test, AppURL, SSN, FileName);
			        this.NewLoan_ILP(SSN, FileName, "200");
			       // this.History(SSN, FileName, 0);
		       		        		        	        	        
			}
			}
			
		}

			
	@Test(priority=1,groups = "venkat_Oh_ILP")
	 
	 public void Login_Homescreen_Borrower_Registration_NewLoan_Monthly() throws Exception {

			// Start test. Mention test script name
			String FileName= "AA_Login_Homescreen_Borrower_Registration_NewLoan_Monthly_TestData.xls";
			Excel TestData = new Excel("E:/QC_Workspace/AA_Automation/TestData/OH_ILP/Local/"+FileName);  
			int lastrow=TestData.getLastRow("NewLoan");
			String sheetName="NewLoan";   
			//int lastrow=TestData.getLastRow("Borrower");
			System.out.println(lastrow);
			for(int row=2;row<=lastrow;row++)
			{
				String RunFlag = TestData.getCellData(sheetName,"Run",row);
				//System.out.println(RunFlag);
			if(RunFlag.equals("Y"))
			{	
				//driver.get(appUrl);
				//test.log(LogStatus.INFO, "Application is launched");
				//driver.manage().window().maximize();
					String AppURL = TestData.getCellData(sheetName,"AppURL",row);
					String UserName = TestData.getCellData(sheetName,"UserName",row);
					String Password = TestData.getCellData(sheetName,"Password",row);
			       // System.out.println(Password);
			        String StoreId = TestData.getCellData(sheetName,"StoreID",row);
			        String ProductID = TestData.getCellData(sheetName,"ProductID",row);
			        String StateID = TestData.getCellData(sheetName,"StateID",row);
			        String SSN = TestData.getCellData(sheetName,"SSN",row);	
			        String PayFrequency = TestData.getCellData(sheetName,"Income_PayFrequency",row);
					String CollateralType = TestData.getCellData(sheetName,"ESign_CollateralType",row);
			        String Header = StateID+ "_" + ProductID;
			        //System.out.println(SSN);
			        test = reports.startTest(Header+"_S.No:02"+"_"+PayFrequency+"_"+CollateralType, "Login_ Home screen_ Borrower _Registration monthly income frequency_New loan");
			        appUrl = AppURL;

			        CSRLoginpage login = new CSRLoginpage();
			        login.Login(UserName, Password, StoreId, driver, AppURL, test);
			        this.RegistrationPage_NewLoan_ILP(driver, test, AppURL, SSN, FileName);
			        this.NewLoan_ILP(SSN, FileName, "200");
			     //   this.History(SSN, FileName, 0);
	       
			       		        		        	        	        
			}
		}
			

	}

	 
	 
@Test(priority=42,groups = "venkat_Oh_ILP")//2
	 
	 public void Login_Homescreen_Borrower_Registration_NewLoan_SemiMonthly() throws Exception {

			// Start test. Mention test script name
			String FileName= "AA_Login_Homescreen_Borrower_Registration_NewLoan_SemiMonthly_TestData.xls";
			Excel TestData = new Excel("E:/QC_Workspace/AA_Automation/TestData/OH_ILP/Local/"+FileName);  
			int lastrow=TestData.getLastRow("NewLoan");
			String sheetName="NewLoan";   
			//int lastrow=TestData.getLastRow("Borrower");
			System.out.println(lastrow);
			for(int row=2;row<=lastrow;row++)
			{
				String RunFlag = TestData.getCellData(sheetName,"Run",row);
				//System.out.println(RunFlag);
			if(RunFlag.equals("Y"))
			{	
				//driver.get(appUrl);
				//test.log(LogStatus.INFO, "Application is launched");
				//driver.manage().window().maximize();
					String AppURL = TestData.getCellData(sheetName,"AppURL",row);
					String UserName = TestData.getCellData(sheetName,"UserName",row);
					String Password = TestData.getCellData(sheetName,"Password",row);
			       // System.out.println(Password);
			        String StoreId = TestData.getCellData(sheetName,"StoreID",row);
			        String ProductID = TestData.getCellData(sheetName,"ProductID",row);
			        String StateID = TestData.getCellData(sheetName,"StateID",row);
			        String SSN = TestData.getCellData(sheetName,"SSN",row);	
			        String PayFrequency = TestData.getCellData(sheetName,"Income_PayFrequency",row);
					String CollateralType = TestData.getCellData(sheetName,"ESign_CollateralType",row);
			        String Header = StateID+ "_" + ProductID;
			        //System.out.println(SSN);
			        test = reports.startTest(Header+"_S.No:03"+"_"+PayFrequency+"_"+CollateralType, "Login_ Home screen_ Borrower _Registration semimonthly income frequency_New loan");
			        appUrl = AppURL;

			        CSRLoginpage login = new CSRLoginpage();
			        login.Login(UserName, Password, StoreId, driver, AppURL, test);
			        this.RegistrationPage_NewLoan_ILP(driver, test, AppURL, SSN, FileName);
			       this.NewLoan_ILP(SSN, FileName, "200");
			     //   this.History(SSN, FileName, 0);
	       
			       		        		        	        	        
			}
		}
			

	}

@Test(priority=3,groups = "venkat_Oh_ILP")
	 
	 public void Login_Homescreen_Borrower_Registration_NewLoan_BiWeekly__() throws Exception {

			// Start test. Mention test script name
			String FileName= "AA_Login_Homescreen_Borrower_Registration_NewLoan_BiWeekly__TestData.xls";
			Excel TestData = new Excel("E:/QC_Workspace/AA_Automation/TestData/OH_ILP/Local/"+FileName);  
			int lastrow=TestData.getLastRow("NewLoan");
			String sheetName="NewLoan";   
			//int lastrow=TestData.getLastRow("Borrower");
			System.out.println(lastrow);
			for(int row=2;row<=lastrow;row++)
			{
				String RunFlag = TestData.getCellData(sheetName,"Run",row);
				//System.out.println(RunFlag);
			if(RunFlag.equals("Y"))
			{	
				//driver.get(appUrl);
				//test.log(LogStatus.INFO, "Application is launched");
				//driver.manage().window().maximize();
					String AppURL = TestData.getCellData(sheetName,"AppURL",row);
					String UserName = TestData.getCellData(sheetName,"UserName",row);
					String Password = TestData.getCellData(sheetName,"Password",row);
			       // System.out.println(Password);
			        String StoreId = TestData.getCellData(sheetName,"StoreID",row);
			        String ProductID = TestData.getCellData(sheetName,"ProductID",row);
			        String StateID = TestData.getCellData(sheetName,"StateID",row);
			        String SSN = TestData.getCellData(sheetName,"SSN",row);	
			        String PayFrequency = TestData.getCellData(sheetName,"Income_PayFrequency",row);
					String CollateralType = TestData.getCellData(sheetName,"ESign_CollateralType",row);
			        String Header = StateID+ "_" + ProductID;
			        //System.out.println(SSN);
			        test = reports.startTest(Header+"_S.No:04"+"_"+PayFrequency+"_"+CollateralType, "Login_ Home screen_ Borrower _Registration biweekly income frequency_New loan");
			        appUrl = AppURL;

			        CSRLoginpage login = new CSRLoginpage();
			        login.Login(UserName, Password, StoreId, driver, AppURL, test);
			        this.RegistrationPage_NewLoan_ILP(driver, test, AppURL, SSN, FileName);
			        this.NewLoan_ILP(SSN, FileName, "200");
			      //  this.History(SSN, FileName, 0);

			              		        	        	        
			}
			}
			

		}
	 
	 
	@Test (priority=4,groups = "venkat_Oh_ILP")

	 public void Login_Homescreen_Borrower_Registration_NewLoan_Weekly_() throws Exception {

	 	// Start test. Mention test script name
	 	String FileName= "AA_Login_Homescreen_Borrower_Registration_NewLoan_Weekly_TestData.xls";
	 	Excel TestData = new Excel("E:/QC_Workspace/AA_Automation/TestData/OH_ILP/Local/"+FileName);  
	 	int lastrow=TestData.getLastRow("NewLoan");
	 	String sheetName="NewLoan";   
	 	//int lastrow=TestData.getLastRow("Borrower");
	 	System.out.println(lastrow);
	 	for(int row=2;row<=lastrow;row++)
	 	{
	 		String RunFlag = TestData.getCellData(sheetName,"Run",row);
	 		//System.out.println(RunFlag);
	 	if(RunFlag.equals("Y"))
	 	{	
	 		//driver.get(appUrl);
	 		//test.log(LogStatus.INFO, "Application is launched");
	 		//driver.manage().window().maximize();
	 			String AppURL = TestData.getCellData(sheetName,"AppURL",row);
	 			String UserName = TestData.getCellData(sheetName,"UserName",row);
	 			String Password = TestData.getCellData(sheetName,"Password",row);
	 	       // System.out.println(Password);
	 	        String StoreId = TestData.getCellData(sheetName,"StoreID",row);
	 	        String ProductID = TestData.getCellData(sheetName,"ProductID",row);
	 	        String StateID = TestData.getCellData(sheetName,"StateID",row);
	 	        String SSN = TestData.getCellData(sheetName,"SSN",row);	
	 	        String PayFrequency = TestData.getCellData(sheetName,"Income_PayFrequency",row);
	 			String CollateralType = TestData.getCellData(sheetName,"ESign_CollateralType",row);
	 	        String Header = StateID+ "_" + ProductID;
	 	        //System.out.println(SSN);
	 	        test = reports.startTest(Header+"_S.No:05"+"_"+PayFrequency+"_"+CollateralType, "Login_ Home screen_ Borrower _Registration weekly income frequency_New loan");
	 	        appUrl = AppURL;

	 	        CSRLoginpage login = new CSRLoginpage();
	 	        login.Login(UserName, Password, StoreId, driver, AppURL, test);
	 	       this.RegistrationPage_NewLoan_ILP(driver, test, AppURL, SSN, FileName);
		        this.NewLoan_ILP(SSN, FileName, "200");
	 	       // this.History(SSN, FileName, 0);
	        
	 	}
	 	}
	 	

	}

@Test (priority=5,groups = "venkat_Oh_ILP")

	 public void Login_Homescreen_Borrower_Registration_NewLoan_ACH_() throws Exception {

	 	// Start test. Mention test script name
	 	String FileName= "AA_Login_Homescreen_Borrower_Registration_NewLoan_ACH_TestData.xls";
	 	Excel TestData = new Excel("E:/QC_Workspace/AA_Automation/TestData/OH_ILP/Local/"+FileName);  
	 	int lastrow=TestData.getLastRow("NewLoan");
	 	String sheetName="NewLoan";   
	 	//int lastrow=TestData.getLastRow("Borrower");
	 	System.out.println(lastrow);
	 	for(int row=2;row<=lastrow;row++)
	 	{
	 		String RunFlag = TestData.getCellData(sheetName,"Run",row);
	 		//System.out.println(RunFlag);
	 	if(RunFlag.equals("Y"))
	 	{	
	 		//driver.get(appUrl);
	 		//test.log(LogStatus.INFO, "Application is launched");
	 		//driver.manage().window().maximize();
	 			String AppURL = TestData.getCellData(sheetName,"AppURL",row);
	 			String UserName = TestData.getCellData(sheetName,"UserName",row);
	 			String Password = TestData.getCellData(sheetName,"Password",row);
	 	       // System.out.println(Password);
	 	        String StoreId = TestData.getCellData(sheetName,"StoreID",row);
	 	        String ProductID = TestData.getCellData(sheetName,"ProductID",row);
	 	        String StateID = TestData.getCellData(sheetName,"StateID",row);
	 	        String SSN = TestData.getCellData(sheetName,"SSN",row);	
	 	        String PayFrequency = TestData.getCellData(sheetName,"Income_PayFrequency",row);
	 			String CollateralType = TestData.getCellData(sheetName,"ESign_CollateralType",row);
	 	        String Header = StateID+ "_" + ProductID;
	 	        //System.out.println(SSN);
	 	        test = reports.startTest(Header+"_S.No:05"+"_"+PayFrequency+"_"+CollateralType, "Login_ Home screen_ Borrower _Registration weekly income frequency_New loan");
	 	        appUrl = AppURL;

	 	        CSRLoginpage login = new CSRLoginpage();
	            login.Login(UserName, Password, StoreId, driver, AppURL, test);
	 	         this.RegistrationPage_NewLoan_ILP(driver, test, AppURL, SSN, FileName);
	 	          this.NewLoan_OHILP_AccuralDate(SSN, FileName,"200");
	       		        		        	        	        
	 	}
	 	}
	 	

	 }
	
	 
	@Test (priority=6,groups = "venkat_Oh_ILP")

	    public void Login_Homescreen_Borrower_Registration_NewLoan_MultiDisb_() throws Exception {

	    	// Start test. Mention test script name
	    	String FileName= "AA_Login_Homescreen_Borrower_Registration_NewLoan_MultiDisb_TestData.xls";
	    	Excel TestData = new Excel("E:/QC_Workspace/AA_Automation/TestData/OH_ILP/Local/"+FileName);  
	    	int lastrow=TestData.getLastRow("NewLoan");
	    	String sheetName="NewLoan";   
	    	//int lastrow=TestData.getLastRow("Borrower");
	    	System.out.println(lastrow);
	    	for(int row=2;row<=lastrow;row++)
	    	{
	    		String RunFlag = TestData.getCellData(sheetName,"Run",row);
	    		//System.out.println(RunFlag);
	    	if(RunFlag.equals("Y"))
	    	{	
	    		//driver.get(appUrl);
	    		//test.log(LogStatus.INFO, "Application is launched");
	    		//driver.manage().window().maximize();
	    			String AppURL = TestData.getCellData(sheetName,"AppURL",row);
	    			String UserName = TestData.getCellData(sheetName,"UserName",row);
	    			String Password = TestData.getCellData(sheetName,"Password",row);
	    	       // System.out.println(Password);
	    	        String StoreId = TestData.getCellData(sheetName,"StoreID",row);
	    	        String ProductID = TestData.getCellData(sheetName,"ProductID",row);
	    	        String StateID = TestData.getCellData(sheetName,"StateID",row);
	    	        String SSN = TestData.getCellData(sheetName,"SSN",row);	
	    	        String PayFrequency = TestData.getCellData(sheetName,"Income_PayFrequency",row);
	    			String CollateralType = TestData.getCellData(sheetName,"ESign_CollateralType",row);
	    	        String Header = StateID+ "_" + ProductID;
	    	        //System.out.println(SSN);
	    	        test = reports.startTest(Header+"_S.No:07"+"_"+PayFrequency+"_"+CollateralType, "Login_ Home screen_ Borrower _Registration_select multiple disbursement types");
	    	        appUrl = AppURL;

	    	        CSRLoginpage login = new CSRLoginpage();
	    	        login.Login(UserName, Password, StoreId, driver, AppURL, test);
	    	        this.RegistrationPage_NewLoan_ILP(driver, test, AppURL, SSN, FileName);
	    	        this.NewLoan_ILP_MultiDisb(SSN, FileName,"200");
	    	     //   this.History(SSN, FileName, 0);
	    	       		        		        	        	        
	    	}
	    	}
	    	

	}
	 
	@Test (priority=7,groups = "venkat_Oh_ILP")		

	
		public void CO_ILP_NewLoanVoid() throws Exception {
		
		
			// Start test. Mention test script name
			String FileName= "AA_COILP_NewLoan_Void_Testdata.xls";
			Excel TestData = new Excel(System.getProperty("user.dir")+"/TestData/OH_ILP/Local/"+FileName); 
			int lastrow=TestData.getLastRow("NewLoan");
			String sheetName="NewLoan";
			
			System.out.println(lastrow);
			for(int row=2;row<=lastrow;row++)
			{
				String RunFlag = TestData.getCellData(sheetName,"Run",row);

			if(RunFlag.equals("Y"))
			{	

					String AppURL = TestData.getCellData(sheetName,"AppURL",row);
					String UserName = TestData.getCellData(sheetName,"UserName",row);
					String Password = TestData.getCellData(sheetName,"Password",row);
			        String StoreId = TestData.getCellData(sheetName,"StoreID",row);
			        String ProductID = TestData.getCellData(sheetName,"ProductID",row);
			        String StateID = TestData.getCellData(sheetName,"StateID",row);
			        String SSN = TestData.getCellData(sheetName,"SSN",row);	
			        String Header = StateID+ "_" + ProductID;
			        String PayFrequency = TestData.getCellData(sheetName,"Income_PayFrequency",row);
					String CollateralType = TestData.getCellData(sheetName,"ESign_CollateralType",row);		 

					test = reports.startTest(Header+"_S.No:8"+"_"+PayFrequency+"_"+CollateralType,"Loan– same day Void");

			         Assert.assertTrue(true);
			         appUrl = AppURL;
			         CSRLoginpage login = new CSRLoginpage();
			         login.Login(UserName, Password, StoreId, driver, AppURL, test);
			          this.RegistrationPage_NewLoan_ILP(driver, test, AppURL, SSN, FileName);
			          this.NewLoan_ILP(SSN, FileName, "200");
			           this.Void(SSN, FileName);
			 }
			
			}	
		}
	@Test (priority=8,groups = "venkat_Oh_ILP")

		public void loan_VoidEncryption() throws Exception {
		
		// Start test. Mention test script name
		String FileName= "AA_loan_VoidEncryption_Testdata.xls";
		Excel TestData = new Excel(System.getProperty("user.dir")+"/TestData/OH_ILP/Local/"+FileName);  	
		int lastrow=TestData.getLastRow("NewLoan");
		String sheetName="NewLoan";

		//int lastrow=TestData.getLastRow("Borrower");
		System.out.println(lastrow);
		for(int row=2;row<=lastrow;row++)
		{
			String RunFlag = TestData.getCellData(sheetName,"Run",row);
			//System.out.println(RunFlag);
		if(RunFlag.equals("Y"))
		{	
			//driver.get(appUrl);
			//test.log(LogStatus.INFO, "Application is launched");
			//driver.manage().window().maximize();
				
			
			    String PayFrequency = TestData.getCellData(sheetName,"Income_PayFrequency",row);
				String CollateralType = TestData.getCellData(sheetName,"ESign_CollateralType",row);
				String AppURL = TestData.getCellData(sheetName,"AppURL",row);
				String UserName = TestData.getCellData(sheetName,"UserName",row);
				String Password = TestData.getCellData(sheetName,"Password",row);
		       // System.out.println(Password);
		        String StoreId = TestData.getCellData(sheetName,"StoreID",row);
		        String ProductID = TestData.getCellData(sheetName,"ProductID",row);
		        String StateID = TestData.getCellData(sheetName,"StateID",row);
		        String SSN = TestData.getCellData(sheetName,"SSN",row);	
		        String Header = StateID+ "_" + ProductID;
		        //System.out.println(SSN);
		        test = reports.startTest(Header+"_S.No:9"+"_"+PayFrequency+"_"+CollateralType,"Loan – void on next day with encryption key");
		        appUrl = AppURL;
		             this.Login(UserName,Password,StoreId);
		           this.RegistrationPage_NewLoan_ILP(driver, test, AppURL, SSN, FileName);
		           this.NewLoan_ILP(SSN, FileName, "200");
		            this.AgeStore(SSN, FileName,1);
		           this.EncryptionKey_Void(SSN, FileName);
		        
		}       
		}
		

	}
		
		@Test (priority=9,groups = "venkat_Oh_ILP")
		
		public void CO_ILP_NewLoanRescind() throws Exception {
		
		
			// Start test. Mention test script name
			String FileName= "AA_COILP_NewLoan_Rescind_Testdata.xls";
			Excel TestData = new Excel(System.getProperty("user.dir")+"/TestData/OH_ILP/Local/"+FileName); 
			int lastrow=TestData.getLastRow("NewLoan");
			String sheetName="NewLoan";
			//int lastrow=TestData.getLastRow("Borrower");
			System.out.println(lastrow);
			for(int row=2;row<=lastrow;row++)
			{
				String RunFlag = TestData.getCellData(sheetName,"Run",row);
				//System.out.println(RunFlag);
			if(RunFlag.equals("Y"))
			{	
				//driver.get(appUrl);
				//test.log(LogStatus.INFO, "Application is launched");
				//driver.manage().window().maximize();
					String AppURL = TestData.getCellData(sheetName,"AppURL",row);
					String UserName = TestData.getCellData(sheetName,"UserName",row);
					String Password = TestData.getCellData(sheetName,"Password",row);
			       // System.out.println(Password);
			        String StoreId = TestData.getCellData(sheetName,"StoreID",row);
			        String ProductID = TestData.getCellData(sheetName,"ProductID",row);
			        String StateID = TestData.getCellData(sheetName,"StateID",row);
			        String SSN = TestData.getCellData(sheetName,"SSN",row);	
			        String Header = StateID+ "_" + ProductID;
			        String PayFrequency = TestData.getCellData(sheetName,"Income_PayFrequency",row);
					String CollateralType = TestData.getCellData(sheetName,"ESign_CollateralType",row);		 

					test = reports.startTest(Header+"_S.No:10"+"_"+PayFrequency+"_"+CollateralType,"Loan– Rescind");

			         Assert.assertTrue(true);
			         appUrl = AppURL;
			         CSRLoginpage login = new CSRLoginpage();
			         login.Login(UserName, Password, StoreId, driver, AppURL, test);
			         this.RegistrationPage_NewLoan_ILP(driver, test, AppURL, SSN, FileName);
			         this.NewLoan_ILP(SSN, FileName, "200");
			         this.Rescind(SSN, FileName);
			
			}
			
			}
			
		}
		
		
@Test (priority=10,groups = "venkat_Oh_ILP")
		
		public void CO_ILP_MultipleDisbNewLoan_Void() throws Exception {
		
		
			// Start test. Mention test script name
			String FileName= "AA_COILP_MultipleDisb_Void_Testdata.xls";
			Excel TestData = new Excel(System.getProperty("user.dir")+"/TestData/OH_ILP/Local/"+FileName); 
			int lastrow=TestData.getLastRow("NewLoan");
			String sheetName="NewLoan";
			System.out.println(lastrow);
			for(int row=2;row<=lastrow;row++)
			{
				String RunFlag = TestData.getCellData(sheetName,"Run",row);
			
			if(RunFlag.equals("Y"))
				
			{	
				
					String AppURL = TestData.getCellData(sheetName,"AppURL",row);
					String UserName = TestData.getCellData(sheetName,"UserName",row);
					String Password = TestData.getCellData(sheetName,"Password",row);		       
			        String StoreId = TestData.getCellData(sheetName,"StoreID",row);
			        String ProductID = TestData.getCellData(sheetName,"ProductID",row);
			        String StateID = TestData.getCellData(sheetName,"StateID",row);
			        String SSN = TestData.getCellData(sheetName,"SSN",row);	
			        String Header = StateID+ "_" + ProductID;
			        String PayFrequency = TestData.getCellData(sheetName,"Income_PayFrequency",row);
					String CollateralType = TestData.getCellData(sheetName,"ESign_CollateralType",row);		 

					test = reports.startTest(Header+"_S.No:11"+"_"+PayFrequency+"_"+CollateralType,"Loan with multiple disbursement (cash& check)->void with cash");

			         Assert.assertTrue(true);
			         appUrl = AppURL;
			         CSRLoginpage login = new CSRLoginpage();
			         login.Login(UserName, Password, StoreId, driver, AppURL, test);
			         this.RegistrationPage_NewLoan_ILP(driver, test, AppURL, SSN, FileName);
			         this.NewLoan_ILP_MultiDisb(SSN, FileName,"200");
			         this.Void(SSN, FileName);
			        /// this.History(SSN, FileName);
			         //this.Drawerassign(SSN, FileName);
			
			}
			
			}
			
		}
		
		
	 
@Test (priority=12,groups = "venkat_Oh_ILP") //Run this scenario with store date need to check again for the date

		public void LonI_StoreDateafterRescindPeriod_Payment_selectpayanyotheramt_Pymtamtlessthan1stint() throws Exception {

			// Start test. Mention test script name
			String FileName= "AA_LonI_StoreDateafterRescindPeriod_Payment_selectpayanyotheramt_Pymtamtlessthan1stint_Txn_TestData.xls";		 
			Excel TestData = new Excel(System.getProperty("user.dir")+"/TestData/OH_ILP/Local/"+FileName);
			int lastrow=TestData.getLastRow("NewLoan");
			String sheetName="NewLoan";
			System.out.println(lastrow);
			for(int row=2;row<=lastrow;row++)
			{
				String RunFlag = TestData.getCellData(sheetName,"Run",row);
				//System.out.println(RunFlag);
				if(RunFlag.equals("Y"))
				{	
					//driver.get(appUrl);
					//test.log(LogStatus.INFO, "Application is launched");
					//driver.manage().window().maximize();
					String AppURL = TestData.getCellData(sheetName,"AppURL",row);
					String UserName = TestData.getCellData(sheetName,"UserName",row);
					String Password = TestData.getCellData(sheetName,"Password",row);
					// System.out.println(Password);
					String StoreId = TestData.getCellData(sheetName,"StoreID",row);
					String ProductID = TestData.getCellData(sheetName,"ProductID",row);
					String StateID = TestData.getCellData(sheetName,"StateID",row);
					String SSN = TestData.getCellData(sheetName,"SSN",row);
					String PayFrequency = TestData.getCellData(sheetName,"Income_PayFrequency",row);
					String CollateralType = TestData.getCellData(sheetName,"ESign_CollateralType",row);
					String Header = StateID+ "_" + ProductID;      		        
					test = reports.startTest(Header+"_S.No:13"+"_"+PayFrequency+"_"+CollateralType,"Loan_age the store date to after rescind period_select payment option from CSR dropdown_Payment screen should show the follwing options  1.Pay Off the balance 2.Pay Installment Am t 3.Pay any other Amt>select pay any other amt_enter Payment amount less than 1# amount");
					appUrl = AppURL;

					this.Login(UserName,Password,StoreId);			        
					this.RegistrationPage_NewLoan_ILP(driver, test, AppURL, SSN, FileName);
					this.NewLoan_ILP(SSN, FileName, "200");
	     			this.AgeStore(SSN, FileName, -6);				
					this.Payment_LessthanAmount(SSN, FileName);
				//	this.History1(SSN, FileName);

				}
			}

		}
	

	@Test (priority=13,groups = "venkat_Oh_ILP") //Run this scenario with store date need to check again for the date

		public void LonI_RunEODbatchon1Instduedate_Payment_PayPastDue_NextInstallment() throws Exception {

			// Start test. Mention test script name
			String FileName= "AA_LonI_RunEODbatchon1Instduedate_Payment_PayPastDue_NextInstallment_Txn_TestData.xls";	
			                 
			Excel TestData = new Excel(System.getProperty("user.dir")+"/TestData/OH_ILP/Local/"+FileName);
			int lastrow=TestData.getLastRow("NewLoan");
			String sheetName="NewLoan";
			System.out.println(lastrow);
			for(int row=2;row<=lastrow;row++)
			{
				String RunFlag = TestData.getCellData(sheetName,"Run",row);
				//System.out.println(RunFlag);
				if(RunFlag.equals("Y"))
				{	
					//driver.get(appUrl);
					//test.log(LogStatus.INFO, "Application is launched");
					//driver.manage().window().maximize();
					String AppURL = TestData.getCellData(sheetName,"AppURL",row);
					String UserName = TestData.getCellData(sheetName,"UserName",row);
					String Password = TestData.getCellData(sheetName,"Password",row);
					// System.out.println(Password);
					String StoreId = TestData.getCellData(sheetName,"StoreID",row);
					String ProductID = TestData.getCellData(sheetName,"ProductID",row);
					String StateID = TestData.getCellData(sheetName,"StateID",row);
					String SSN = TestData.getCellData(sheetName,"SSN",row);
					String PayFrequency = TestData.getCellData(sheetName,"Income_PayFrequency",row);
					String CollateralType = TestData.getCellData(sheetName,"ESign_CollateralType",row);
					String Header = StateID+ "_" + ProductID;      		        
					test = reports.startTest(Header+"_S.No:14"+"_"+PayFrequency+"_"+CollateralType,"Loan>Run EOD batch process on 1# due date>Run again EOD batch process from 10th day of 1# due date>Payment(past due +installment amount");
					appUrl = AppURL;

					this.Login(UserName,Password,StoreId);			        
					this.RegistrationPage_NewLoan_ILP(driver, test, AppURL, SSN, FileName);
					this.NewLoan_ILP(SSN, FileName, "200"); 
					this.EOD_BatchProcess_DueDate(SSN, FileName, 0);
					this.Customer_Status(SSN, FileName);
					this.AgeStore_ILP(SSN, FileName, 1, 2);
					this.Payment_Pastdue_NextInst(SSN, FileName);				
					//this.History1(SSN, FileName);
					this.Customer_Status(SSN, FileName);

				}
			}

		}
		
	 
	@Test (priority=14,groups = "venkat_Oh_ILP") //Run this scenario with store date need to check again for the date

		public void LonI_RunEODbatchon1Instduedate_AgainEODbatchfrom10thdayof1stInstduedate_Payment_Pastdue_1stInstamt() throws Exception {

			// Start test. Mention test script name
			String FileName= "AA_LonI_RunEODbatchon1Instduedate_AgainEODbatchfrom10thdayof1stInstduedate_Payment_Pastdue_Pymtamt_Txn_TestData.xls";		 
			Excel TestData = new Excel(System.getProperty("user.dir")+"/TestData/OH_ILP/Local/"+FileName);
			int lastrow=TestData.getLastRow("NewLoan");
			String sheetName="NewLoan";
			System.out.println(lastrow);
			for(int row=2;row<=lastrow;row++)
			{
				String RunFlag = TestData.getCellData(sheetName,"Run",row);
				//System.out.println(RunFlag);
				if(RunFlag.equals("Y"))
				{	
					//driver.get(appUrl);
					//test.log(LogStatus.INFO, "Application is launched");
					//driver.manage().window().maximize();
					String AppURL = TestData.getCellData(sheetName,"AppURL",row);
					String UserName = TestData.getCellData(sheetName,"UserName",row);
					String Password = TestData.getCellData(sheetName,"Password",row);
					// System.out.println(Password);
					String StoreId = TestData.getCellData(sheetName,"StoreID",row);
					String ProductID = TestData.getCellData(sheetName,"ProductID",row);
					String StateID = TestData.getCellData(sheetName,"StateID",row);
					String SSN = TestData.getCellData(sheetName,"SSN",row);
					String PayFrequency = TestData.getCellData(sheetName,"Income_PayFrequency",row);
					String CollateralType = TestData.getCellData(sheetName,"ESign_CollateralType",row);
					String Header = StateID+ "_" + ProductID;      		        
					test = reports.startTest(Header+"_S.No:15"+"_"+PayFrequency+"_"+CollateralType,"Loan>Run EOD batch process on 1# due date>Run again EOD batch process from 10th day of 1# due date>Payment(past due +installment amount");
					appUrl = AppURL;

					this.Login(UserName,Password,StoreId);			        
					this.RegistrationPage_NewLoan_ILP(driver, test, AppURL, SSN, FileName);
					this.NewLoan_ILP(SSN, FileName, "200");
					this.EOD_BatchProcess_DueDate(SSN, FileName, 0);
					this.Customer_Status(SSN, FileName);
					this.EOD_BatchProcess_DueDate(SSN, FileName, 10);
	     			this.Payment_2ndEODbatchprocess(SSN, FileName);
					this.Customer_Status(SSN, FileName);
					//this.Apportions_List(SSN, FileName, 2);
					

				}
			}

		}

		


		
		@Test (priority=15,groups = "venkat_Oh_ILP") //Run this scenario with store date need to check again for the date

		public void LonI_StoreDateafterRescindPeriod_Payment_selectpayanyotheramt_Pymtamtlessthan1stint_VoidPymt() throws Exception {

			// Start test. Mention test script name
			String FileName= "AA_LonI_StoreDateafterRescindPeriod_Payment_selectpayanyotheramt_Pymtamtlessthan1stint_VoidPymt_Txn_TestData.xls";		 
			Excel TestData = new Excel(System.getProperty("user.dir")+"/TestData/OH_ILP/Local/"+FileName);
			int lastrow=TestData.getLastRow("NewLoan");
			String sheetName="NewLoan";
			System.out.println(lastrow);
			for(int row=2;row<=lastrow;row++)
			{
				String RunFlag = TestData.getCellData(sheetName,"Run",row);
				//System.out.println(RunFlag);
				if(RunFlag.equals("Y"))
				{	
					//driver.get(appUrl);
					//test.log(LogStatus.INFO, "Application is launched");
					//driver.manage().window().maximize();
					String AppURL = TestData.getCellData(sheetName,"AppURL",row);
					String UserName = TestData.getCellData(sheetName,"UserName",row);
					String Password = TestData.getCellData(sheetName,"Password",row);
					// System.out.println(Password);
					String StoreId = TestData.getCellData(sheetName,"StoreID",row);
					String ProductID = TestData.getCellData(sheetName,"ProductID",row);
					String StateID = TestData.getCellData(sheetName,"StateID",row);
					String SSN = TestData.getCellData(sheetName,"SSN",row);
					String PayFrequency = TestData.getCellData(sheetName,"Income_PayFrequency",row);
					String CollateralType = TestData.getCellData(sheetName,"ESign_CollateralType",row);
					String Header = StateID+ "_" + ProductID;      		        
					test = reports.startTest(Header+"_S.No:16"+"_"+PayFrequency+"_"+CollateralType,"Loan_age the store date to after rescind period_select payment option from CSR dropdown_Payment screen should show the follwing options  1.Pay Off the balance 2.Pay Installment Am t 3.Pay any other Amt>select pay any other amt_enter Payment amount less than 1# amount");
					appUrl = AppURL;

					this.Login(UserName,Password,StoreId);			        
					this.RegistrationPage_NewLoan_ILP(driver, test, AppURL, SSN, FileName);
					this.NewLoan_ILP(SSN, FileName, "200");
					this.AgeStore(SSN, FileName, -6);				
					this.Payment_LessthanAmount(SSN, FileName);
					//this.Apportions_List(SSN, FileName, row);
		         	this.Void_Payment(SSN, FileName);
					//this.Void(SSN, FileName);
				//	this.Apportions_List(SSN, FileName, row);

				}
			}

		}



 @Test (priority=16,groups = "venkat_Oh_ILP") //Dubilicate

		public void LonI_RunEODbatchon1Instduedate_Payment_PayPastDue_NextInstallment_VoidPymt() throws Exception {

			// Start test. Mention test script name
			String FileName= "AA_LonI_RunEODbatchon1Instduedate_Payment_PayPastDue_NextInstallment_VoidPymt_Txn_TestData.xls";		 
			Excel TestData = new Excel(System.getProperty("user.dir")+"/TestData/OH_ILP/Local/"+FileName);
			int lastrow=TestData.getLastRow("NewLoan");
			String sheetName="NewLoan";
			System.out.println(lastrow);
			for(int row=2;row<=lastrow;row++)
			{
				String RunFlag = TestData.getCellData(sheetName,"Run",row);
				//System.out.println(RunFlag);
				if(RunFlag.equals("Y"))
				{	
					//driver.get(appUrl);
					//test.log(LogStatus.INFO, "Application is launched");
					//driver.manage().window().maximize();
					String AppURL = TestData.getCellData(sheetName,"AppURL",row);
					String UserName = TestData.getCellData(sheetName,"UserName",row);
					String Password = TestData.getCellData(sheetName,"Password",row);
					// System.out.println(Password);
					String StoreId = TestData.getCellData(sheetName,"StoreID",row);
					String ProductID = TestData.getCellData(sheetName,"ProductID",row);
					String StateID = TestData.getCellData(sheetName,"StateID",row);
					String SSN = TestData.getCellData(sheetName,"SSN",row);
					String PayFrequency = TestData.getCellData(sheetName,"Income_PayFrequency",row);
					String CollateralType = TestData.getCellData(sheetName,"ESign_CollateralType",row);
					String Header = StateID+ "_" + ProductID;      		        
					test = reports.startTest(Header+"_S.No:17"+"_"+PayFrequency+"_"+CollateralType,"Loan>Run EOD batch process on 1# due date>Run again EOD batch process from 10th day of 1# due date>Payment(past due +installment amount");
					appUrl = AppURL;

					this.Login(UserName,Password,StoreId);			        
					this.RegistrationPage_NewLoan_ILP(driver, test, AppURL, SSN, FileName);
					this.NewLoan_ILP(SSN, FileName, "200"); 
					this.EOD_BatchProcess_DueDate(SSN, FileName, 0);
					this.Customer_Status(SSN, FileName);
					//this.Apportions_List(SSN, FileName, 2);
					this.AgeStore_ILP(SSN, FileName, 1, 2);
					this.Payment_Pastdue_NextInst(SSN, FileName);				
				//	this.History1(SSN, FileName);
					this.Customer_Status(SSN, FileName);
					this.Void_Payment(SSN, FileName);
					//this.Apportions_List(SSN, FileName, 2);
					this.Customer_Status(SSN, FileName);

				}
			}

		}
		
		
@Test (priority=17,groups = "venkat_Oh_ILP") 

		public void LonI_RunEODbatchon1Instduedate_AgainEODbatchfrom10thdayof1stInstduedate_Payment_Pastdue_1stInstamt_Void() throws Exception {

			// Start test. Mention test script name
			String FileName= "AA_LonI_RunEODbatchon1Instduedate_AgainEODbatchfrom10thdayof1stInstduedate_Payment_Pastdue_1stInstamt_Void_Txn_TestData.xls";		
			                  
			Excel TestData = new Excel(System.getProperty("user.dir")+"/TestData/OH_ILP/Local/"+FileName);
			int lastrow=TestData.getLastRow("NewLoan");
			String sheetName="NewLoan";
			System.out.println(lastrow);
			for(int row=2;row<=lastrow;row++)
			{
				String RunFlag = TestData.getCellData(sheetName,"Run",row);
				//System.out.println(RunFlag);
				if(RunFlag.equals("Y"))
				{	
					//driver.get(appUrl);
					//test.log(LogStatus.INFO, "Application is launched");
					//driver.manage().window().maximize();
					String AppURL = TestData.getCellData(sheetName,"AppURL",row);
					String UserName = TestData.getCellData(sheetName,"UserName",row);
					String Password = TestData.getCellData(sheetName,"Password",row);
					// System.out.println(Password);
					String StoreId = TestData.getCellData(sheetName,"StoreID",row);
					String ProductID = TestData.getCellData(sheetName,"ProductID",row);
					String StateID = TestData.getCellData(sheetName,"StateID",row);
					String SSN = TestData.getCellData(sheetName,"SSN",row);
					String PayFrequency = TestData.getCellData(sheetName,"Income_PayFrequency",row);
					String CollateralType = TestData.getCellData(sheetName,"ESign_CollateralType",row);
					String Header = StateID+ "_" + ProductID;      		        
					test = reports.startTest(Header+"_S.No:18"+"_"+PayFrequency+"_"+CollateralType,"Loan>Run EOD batch process on 1# due date>Run again EOD batch process from 10th day of 1# due date>Payment(past due +installement amount)>void payment on next day");
					appUrl = AppURL;

					this.Login(UserName,Password,StoreId);			        
					this.RegistrationPage_NewLoan_ILP(driver, test, AppURL, SSN, FileName);
					this.NewLoan_ILP(SSN, FileName, "200");
					this.EOD_BatchProcess_DueDate(SSN, FileName, 0, 2);
					this.Customer_Status(SSN, FileName);
			  		this.EOD_BatchProcess_DueDate(SSN, FileName, 10, 2);
					this.Payment_2ndEODbatchprocess(SSN, FileName);
					this.Customer_Status(SSN, FileName);
				//	this.Apportions_List(SSN, FileName, 2);
					this.EOD_BatchProcess_DueDate(SSN, FileName, 12, 2);
					//this.Void_Payment(SSN, FileName);
	               this.Payment_EncryptionKey_Void(SSN, FileName);
					

				}
			}

		}

		



@Test (priority=18,groups = "venkat_Oh_ILP")

	public void Loan_Deposit_Rtn_paymentLessthanLoanAmount() throws Exception {
		
		// Start test. Mention test script name
		String FileName= "AA_Loan_Deposit_Rtn_paymentLessthanLoanAmount_Testdata.xls";
	 	Excel TestData = new Excel(System.getProperty("user.dir")+"/TestData/OH_ILP/Local/"+FileName);  	
		int lastrow=TestData.getLastRow("NewLoan");
		String sheetName="NewLoan";

		//int lastrow=TestData.getLastRow("Borrower");
		System.out.println(lastrow);
		for(int row=2;row<=lastrow;row++)
		{
			String RunFlag = TestData.getCellData(sheetName,"Run",row);
			//System.out.println(RunFlag);
		if(RunFlag.equals("Y"))
		{	
			//driver.get(appUrl);
			//test.log(LogStatus.INFO, "Application is launched");
			//driver.manage().window().maximize();
				
			
			    String PayFrequency = TestData.getCellData(sheetName,"Income_PayFrequency",row);
				String CollateralType = TestData.getCellData(sheetName,"ESign_CollateralType",row);
				String AppURL = TestData.getCellData(sheetName,"AppURL",row);
				String UserName = TestData.getCellData(sheetName,"UserName",row);
				String Password = TestData.getCellData(sheetName,"Password",row);
		       // System.out.println(Password);
		        String StoreId = TestData.getCellData(sheetName,"StoreID",row);
		        String ProductID = TestData.getCellData(sheetName,"ProductID",row);
		        String StateID = TestData.getCellData(sheetName,"StateID",row);
		        String SSN = TestData.getCellData(sheetName,"SSN",row);	
		        String Header = StateID+ "_" + ProductID;
		        //System.out.println(SSN);
		        test = reports.startTest(Header+"_S.No:19"+"_"+PayFrequency+"_"+CollateralType,"Loan_1# deposit_rtn_payment(less than 1# amount)");
		        appUrl = AppURL;
		        this.Login(UserName,Password,StoreId);
		        this.RegistrationPage_NewLoan_ILP(driver, test, AppURL, SSN, FileName);
		        this.NewLoan_ILP(SSN, FileName, "200");
		         this.AgeStore(SSN, FileName, -1);
		         this.DrawerDeassign(SSN, FileName);
		         this.StatementGeneration_EODProcessing(SSN, FileName);
		         this.StoreInfo(SSN, FileName);
		         this.Safeassign(SSN, FileName);
		         this.Drawerassign(SSN, FileName);
		         this.Payliance_OriginationFile(SSN, FileName, -1);
		         this.ACH_Deposit(SSN, FileName, 0);
		         this.ACHReturnPosting(SSN, FileName);
		         this.Payment_LessthanAmount(SSN, FileName);
		      // this.History(SSN, FileName);
		         this.Loan_Balance_Status(SSN, FileName);
		}       
		}
		

			}



@Test (priority=19,groups = "venkat_Oh_ILP")

	public void Loan_Deposit_Rtn_paymentGreaterthanLoanAmount() throws Exception {
		
		// Start test. Mention test script name
		String FileName= "Loan_Deposit_Rtn_paymentGreaterthanLoanAmount.xls";
		Excel TestData = new Excel(System.getProperty("user.dir")+"/TestData/OH_ILP/Local/"+FileName);  	
		int lastrow=TestData.getLastRow("NewLoan");
		String sheetName="NewLoan";

		//int lastrow=TestData.getLastRow("Borrower");
		System.out.println(lastrow);
		for(int row=2;row<=lastrow;row++)
		{
			String RunFlag = TestData.getCellData(sheetName,"Run",row);
			//System.out.println(RunFlag);
		if(RunFlag.equals("Y"))
		{	
			//driver.get(appUrl);
			//test.log(LogStatus.INFO, "Application is launched");
			//driver.manage().window().maximize();
				
			
			    String PayFrequency = TestData.getCellData(sheetName,"Income_PayFrequency",row);
				String CollateralType = TestData.getCellData(sheetName,"ESign_CollateralType",row);
				String AppURL = TestData.getCellData(sheetName,"AppURL",row);
				String UserName = TestData.getCellData(sheetName,"UserName",row);
				String Password = TestData.getCellData(sheetName,"Password",row);
		       // System.out.println(Password);
		        String StoreId = TestData.getCellData(sheetName,"StoreID",row);
		        String ProductID = TestData.getCellData(sheetName,"ProductID",row);
		        String StateID = TestData.getCellData(sheetName,"StateID",row);
		        String SSN = TestData.getCellData(sheetName,"SSN",row);	
		        String Header = StateID+ "_" + ProductID;
		        //System.out.println(SSN);
		        test = reports.startTest(Header+"_S.No:20"+"_"+PayFrequency+"_"+CollateralType,"Loan_1# deposit_rtn_payment(greaterthan 1# amount)");
		        appUrl = AppURL;
		        this.Login(UserName,Password,StoreId);
		        this.RegistrationPage_NewLoan_ILP(driver, test, AppURL, SSN, FileName);
		        this.NewLoan_ILP(SSN, FileName, "200");
		         this.AgeStore(SSN, FileName, -1);
		         this.DrawerDeassign(SSN, FileName);
		         this.StatementGeneration_EODProcessing(SSN, FileName);
		         this.StoreInfo(SSN, FileName);
		        this.Safeassign(SSN, FileName);
		         this.Drawerassign(SSN, FileName);
		         this.Payliance_OriginationFile(SSN, FileName, -1);
		        this.ACH_Deposit(SSN, FileName, 0);
		      //   this.inst1_AgeStore(SSN, FileName, 8);
		         this.ACHReturnPosting(SSN, FileName);
		         this.inst1_AgeStore(SSN, FileName, 0);
		         this.Payment_gaterthanAmount(SSN, FileName);
		        // this.History(SSN, FileName );
		         this.Loan_Balance_Status(SSN, FileName);
		}       
		}
		

	}



	@Test (priority=20,groups = "venkat_Oh_ILP")

public void Loan_Deposit_RTN_EODBatchon10days_PaymentGeterthanLoanAmount() throws Exception {

//Start test. Mention test script name
String FileName= "AA_Loan_Deposit_RTN_EODBatchon10days_PaymentGeterthanLoanAmount_Testdata.xls";
Excel TestData = new Excel("E:/QC_Workspace/AA_Automation/TestData/OH_ILP/Local/"+FileName);  
int lastrow=TestData.getLastRow("NewLoan");
String sheetName="NewLoan";   
//int lastrow=TestData.getLastRow("Borrower");
System.out.println(lastrow);
for(int row=2;row<=lastrow;row++)
{
	String RunFlag = TestData.getCellData(sheetName,"Run",row);
	//System.out.println(RunFlag);
if(RunFlag.equals("Y"))
{	
	//driver.get(appUrl);
	//test.log(LogStatus.INFO, "Application is launched");
	//driver.manage().window().maximize();
		String AppURL = TestData.getCellData(sheetName,"AppURL",row);
		String UserName = TestData.getCellData(sheetName,"UserName",row);
		String Password = TestData.getCellData(sheetName,"Password",row);
      // System.out.println(Password);
       String StoreId = TestData.getCellData(sheetName,"StoreID",row);
       String ProductID = TestData.getCellData(sheetName,"ProductID",row);
       String StateID = TestData.getCellData(sheetName,"StateID",row);
       String SSN = TestData.getCellData(sheetName,"SSN",row);	
       String PayFrequency = TestData.getCellData(sheetName,"Income_PayFrequency",row);
		String CollateralType = TestData.getCellData(sheetName,"ESign_CollateralType",row);
       String Header = StateID+ "_" + ProductID;
       //System.out.println(SSN);
       test = reports.startTest(Header+"_S.No:21"+"_"+PayFrequency+"_"+CollateralType, "Loan_1# deposit_rtn_Run EOB batch process from 10th day of due date_payment(greater  than 1# amount)");
       appUrl = AppURL;

       CSRLoginpage login = new CSRLoginpage();
       login.Login(UserName, Password, StoreId, driver, AppURL, test);
     
       this.RegistrationPage_NewLoan_ILP(driver, test, AppURL, SSN, FileName);
       this.NewLoan_ILP(SSN, FileName, "200");
  

       this.AgeStore_ILP(SSN, FileName, -1, 2);
       this.DrawerDeassign(SSN, FileName);
     this.StatementGeneration_EODProcessing(SSN, FileName);
       this.StoreInfo(SSN, FileName);
       this.Safeassign(SSN, FileName);
       this.Drawerassign(SSN, FileName);
       this.Payliance_OriginationFile(SSN, FileName, -1,2);
       this.ACH_Deposit(SSN, FileName, 0);
     

      this.Loan_Balance_Status(SSN, FileName);
     // this.AgeStore_ILP(SSN, FileName, 8, 2);
       this.ACHReturnPosting(SSN, FileName);
       
       this.EOD_BatchProcess_DueDate(SSN, FileName, 10, 2);
      // this.Check_TransactionRecords(SSN, FileName);
       this.Loan_Balance_Status(SSN, FileName);
  
       this.Payment_gaterthanAmount(SSN, FileName);
       
       //this.History(SSN, FileName);
    //   this.History1(SSN, FileName);
       
     		        		        	        	        
		}
	}

}


@Test (priority=21,groups = "venkat_Oh_ILP") 

public void LonI_1stInstdeposit_return_Payment_lessthan1stInstamount_VoidPayment() throws Exception {

	// Start test. Mention test script name
	String FileName= "AA_LonI_1stInstdeposit_return_Payment_lessthan1stInstamount_VoidPayment_Txn_TestData.xls";		 
	Excel TestData = new Excel(System.getProperty("user.dir")+"/TestData/OH_ILP/Local/"+FileName);
	int lastrow=TestData.getLastRow("NewLoan");
	String sheetName="NewLoan";
	System.out.println(lastrow);
	for(int row=2;row<=lastrow;row++)
	{
		String RunFlag = TestData.getCellData(sheetName,"Run",row);
		//System.out.println(RunFlag);
		if(RunFlag.equals("Y"))
		{	
			//driver.get(appUrl);
			//test.log(LogStatus.INFO, "Application is launched");
			//driver.manage().window().maximize();
			String AppURL = TestData.getCellData(sheetName,"AppURL",row);
			String UserName = TestData.getCellData(sheetName,"UserName",row);
			String Password = TestData.getCellData(sheetName,"Password",row);
			// System.out.println(Password);
			String StoreId = TestData.getCellData(sheetName,"StoreID",row);
			String ProductID = TestData.getCellData(sheetName,"ProductID",row);
			String StateID = TestData.getCellData(sheetName,"StateID",row);
			String SSN = TestData.getCellData(sheetName,"SSN",row);
			String PayFrequency = TestData.getCellData(sheetName,"Income_PayFrequency",row);
			String CollateralType = TestData.getCellData(sheetName,"ESign_CollateralType",row);
			String Header = StateID+ "_" + ProductID;      		        
			test = reports.startTest(Header+"_S.No:22"+"_"+PayFrequency+"_"+CollateralType,"Loan>default>Run EOD batch process(default date+60 days)");
			appUrl = AppURL;

		      this.Login(UserName,Password,StoreId);			        
			this.RegistrationPage_NewLoan_ILP(driver, test, AppURL, SSN, FileName);
			this.NewLoan_ILP(SSN, FileName, "200");
			this.AgeStore_ILP(SSN, FileName, -1, 2);
			this.DrawerDeassign(SSN, FileName);
			this.StatementGeneration_EODProcessing(SSN, FileName);
	        this.StoreInfo(SSN, FileName);
	        this.Safeassign(SSN, FileName);
	        this.Drawerassign(SSN, FileName);
	        this.Payliance_OriginationFile(SSN, FileName, -1, 2);
	        this.ACH_Deposit(SSN, FileName, 0);
	       // this.AgeStore_ILP(SSN, FileName, 8, 2);
	        this.ACHReturnPosting(SSN, FileName);
	        this.Payment_LessthanAmount(SSN, FileName, 2);
	        this.Void_Payment(SSN, FileName);
		//	this.Apportions_List(SSN, FileName, 2);
			this.Customer_Status(SSN, FileName);
			//this.History(SSN, FileName);
		}
	}

}
		


@Test (priority=22,groups = "venkat_Oh_ILP")

	public void Loan_Deposit_Rtn_paymentLessthanLoanAmount_Void() throws Exception {
		
		// Start test. Mention test script name
		String FileName= "AA_Loan_Deposit_Rtn_paymentLessthanLoanAmount_Void_Testdata.xls";
		Excel TestData = new Excel(System.getProperty("user.dir")+"/TestData/OH_ILP/Local/"+FileName);  	
		int lastrow=TestData.getLastRow("NewLoan");
		String sheetName="NewLoan";

		//int lastrow=TestData.getLastRow("Borrower");
		System.out.println(lastrow);
		for(int row=2;row<=lastrow;row++)
		{
			String RunFlag = TestData.getCellData(sheetName,"Run",row);
			//System.out.println(RunFlag);
		if(RunFlag.equals("Y"))
		{	
			//driver.get(appUrl);
			//test.log(LogStatus.INFO, "Application is launched");
			//driver.manage().window().maximize();
				
			
			    String PayFrequency = TestData.getCellData(sheetName,"Income_PayFrequency",row);
				String CollateralType = TestData.getCellData(sheetName,"ESign_CollateralType",row);
				String AppURL = TestData.getCellData(sheetName,"AppURL",row);
				String UserName = TestData.getCellData(sheetName,"UserName",row);
				String Password = TestData.getCellData(sheetName,"Password",row);
		       // System.out.println(Password);
		        String StoreId = TestData.getCellData(sheetName,"StoreID",row);
		        String ProductID = TestData.getCellData(sheetName,"ProductID",row);
		        String StateID = TestData.getCellData(sheetName,"StateID",row);
		        String SSN = TestData.getCellData(sheetName,"SSN",row);	
		        String Header = StateID+ "_" + ProductID;
		        //System.out.println(SSN);
		        test = reports.startTest(Header+"_S.No:23"+"_"+PayFrequency+"_"+CollateralType,"Loan_1# deposit_rtn_payment(greater  than 1# amount)_void payment on next day  (Encryption key issue)");
		        appUrl = AppURL;
		         this.Login(UserName,Password,StoreId);
		         this.RegistrationPage_NewLoan_ILP(driver, test, AppURL, SSN, FileName);
		          this.NewLoan_ILP(SSN, FileName, "200");
		         this.AgeStore(SSN, FileName, -1);
		         this.DrawerDeassign(SSN, FileName);
		         this.StatementGeneration_EODProcessing(SSN, FileName);
		         this.StoreInfo(SSN, FileName);
		         this.Safeassign(SSN, FileName);
		         this.Drawerassign(SSN, FileName);
		        this.Payliance_OriginationFile(SSN, FileName, -1);
		         this.ACH_Deposit(SSN, FileName, 0);
		         this.ACHReturnPosting(SSN, FileName);
		         this.Payment_gaterthanAmount(SSN, FileName);
		         this.AgeStore(SSN, FileName,1);
		         this.Payment_EncryptionKey_Void(SSN, FileName);
		        // this.History(SSN, FileName);
		         this.Loan_Balance_Status(SSN, FileName);
		}       
		}
		

			}



@Test (priority=23,groups = "venkat_Oh_ILP")

public void Loan_1stDep_Ret_EODBatch10daysDueDate_PmtGreaterthanInstAmt_Void_() throws Exception {

//Start test. Mention test script name
String FileName= "AA_Loan_1stDep_Ret_EODBatch10daysDueDate_PmtGreaterthanInstAmt_Void_TestData.xls";
Excel TestData = new Excel("E:/QC_Workspace/AA_Automation/TestData/OH_ILP/Local/"+FileName);  
int lastrow=TestData.getLastRow("NewLoan");
String sheetName="NewLoan";   
//int lastrow=TestData.getLastRow("Borrower");
System.out.println(lastrow);
for(int row=2;row<=lastrow;row++)
{
	String RunFlag = TestData.getCellData(sheetName,"Run",row);
	//System.out.println(RunFlag);
if(RunFlag.equals("Y"))
{	
	//driver.get(appUrl);
	//test.log(LogStatus.INFO, "Application is launched");
	//driver.manage().window().maximize();
		String AppURL = TestData.getCellData(sheetName,"AppURL",row);
		String UserName = TestData.getCellData(sheetName,"UserName",row);
		String Password = TestData.getCellData(sheetName,"Password",row);
      // System.out.println(Password);
       String StoreId = TestData.getCellData(sheetName,"StoreID",row);
       String ProductID = TestData.getCellData(sheetName,"ProductID",row);
       String StateID = TestData.getCellData(sheetName,"StateID",row);
       String SSN = TestData.getCellData(sheetName,"SSN",row);	
       String PayFrequency = TestData.getCellData(sheetName,"Income_PayFrequency",row);
		String CollateralType = TestData.getCellData(sheetName,"ESign_CollateralType",row);
       String Header = StateID+ "_" + ProductID;
       //System.out.println(SSN);
       test = reports.startTest(Header+"_S.No:24"+"_"+PayFrequency+"_"+CollateralType, "Loan_1# deposit_rtn_Run EOB batch process from 10th day of due date>payment(greater  than 1# amount)_Void");
       appUrl = AppURL;

       CSRLoginpage login = new CSRLoginpage();
     login.Login(UserName, Password, StoreId, driver, AppURL, test);
       this.RegistrationPage_NewLoan_ILP(driver, test, AppURL, SSN, FileName);
       this.NewLoan_ILP(SSN, FileName, "200");
  

       this.AgeStore_ILP(SSN, FileName, -1, 2);
       this.DrawerDeassign(SSN, FileName);
       this.StatementGeneration_EODProcessing(SSN, FileName);
       this.StoreInfo(SSN, FileName);
       this.Safeassign(SSN, FileName);
       this.Drawerassign(SSN, FileName);
       this.Payliance_OriginationFile(SSN, FileName, -1,2);
       this.ACH_Deposit(SSN, FileName, 0);
     

        this.Loan_Balance_Status(SSN, FileName);
     // this.AgeStore_ILP(SSN, FileName, 8, 2);
       this.ACHReturnPosting(SSN, FileName);
       this.EOD_BatchProcess_DueDate(SSN, FileName, 10, 2);
      // this.Check_TransactionRecords(SSN, FileName);
       this.Loan_Balance_Status(SSN, FileName);
      this.PayAnyAmt_Installments(SSN, FileName);
       this.PayAny_Void(SSN, FileName);
       //this.History(SSN, FileName);
      // this.History1(SSN, FileName);
       
      	        
      
      		        		        	        	        
}
}


	}

	@Test(priority = 24)
	public void Loan_PaymentinCSRPortel() throws Exception {

		// Start test. Mention test script name
		String FileName = "AA_Loan_Payments_Txn_Testdata.xls";
		Excel TestData = new Excel("E:/QC_Workspace/AA_Automation/TestData/OH_ILP/Local/" + FileName);
		int lastrow = TestData.getLastRow("NewLoan");
		String sheetName = "NewLoan";
		// int lastrow=TestData.getLastRow("Borrower");
		System.out.println(lastrow);
		for (int row = 2; row <= lastrow; row++) {
			String RunFlag = TestData.getCellData(sheetName, "Run", row);
			// System.out.println(RunFlag);
			if (RunFlag.equals("Y")) {
				// driver.get(appUrl);
				// test.log(LogStatus.INFO, "Application is launched");
				// driver.manage().window().maximize();
				String AppURL = TestData.getCellData(sheetName, "AppURL", row);
				String UserName = TestData.getCellData(sheetName, "UserName", row);
				String Password = TestData.getCellData(sheetName, "Password", row);
				String PayFrequency = TestData.getCellData(sheetName, "Income_PayFrequency", row);
				String CollateralType = TestData.getCellData(sheetName, "ESign_CollateralType", row);
				// System.out.println(Password);
				String StoreId = TestData.getCellData(sheetName, "StoreID", row);
				String ProductID = TestData.getCellData(sheetName, "ProductID", row);
				String StateID = TestData.getCellData(sheetName, "StateID", row);
				String SSN = TestData.getCellData(sheetName, "SSN", row);
				String Header = StateID + "_" + ProductID;
				// System.out.println(SSN);
				test = reports.startTest(Header + "_S.No:25" + "_" + PayFrequency + "_" + CollateralType,"Loan>select payment option from CSR dropdown> Payment screen ");
				appUrl = AppURL;
				
				    CSRLoginpage login = new CSRLoginpage();
			        login.Login(UserName, Password, StoreId, driver, AppURL, test);
			        this.RegistrationPage_NewLoan_ILP(driver, test, AppURL, SSN, FileName);
	
			        this.NewLoan_ILP(SSN, FileName, "200");
			        this.AgeStore(SSN, FileName, -5);
				    this.Payoff(SSN, FileName);
				   // this.History_Paymentcaluculation(SSN, FileName);

			}
		}

	}
	
	@Test(priority =25)
	public void AA_Loan_1stInstallmentPayments() throws Exception {

		// Start test. Mention test script name
		String FileName = "AA_Loan_1stInstallmentPayments_Txn_Testdata.xls";
		Excel TestData = new Excel("E:/QC_Workspace/AA_Automation/TestData/OH_ILP/Local/" + FileName);
		int lastrow = TestData.getLastRow("NewLoan");
		String sheetName = "NewLoan";
		// int lastrow=TestData.getLastRow("Borrower");
		System.out.println(lastrow);
		for (int row = 2; row <= lastrow; row++) {
			String RunFlag = TestData.getCellData(sheetName, "Run", row);
			// System.out.println(RunFlag);
			if (RunFlag.equals("Y")) {
				// driver.get(appUrl);
				// test.log(LogStatus.INFO, "Application is launched");
				// driver.manage().window().maximize();
				String AppURL = TestData.getCellData(sheetName, "AppURL", row);
				String UserName = TestData.getCellData(sheetName, "UserName", row);
				String Password = TestData.getCellData(sheetName, "Password", row);
				String PayFrequency = TestData.getCellData(sheetName, "Income_PayFrequency", row);
				String CollateralType = TestData.getCellData(sheetName, "ESign_CollateralType", row);
				// System.out.println(Password);
				String StoreId = TestData.getCellData(sheetName, "StoreID", row);
				String ProductID = TestData.getCellData(sheetName, "ProductID", row);
				String StateID = TestData.getCellData(sheetName, "StateID", row);
				String SSN = TestData.getCellData(sheetName, "SSN", row);
				String Header = StateID + "_" + ProductID;
				// System.out.println(SSN);
				test = reports.startTest(Header + "_S.No:26" + "_" + PayFrequency + "_" + CollateralType,"Loan>1# payment on due date>payoff");
				appUrl = AppURL;
				
				    CSRLoginpage login = new CSRLoginpage();
			        login.Login(UserName, Password, StoreId, driver, AppURL, test);
			        this.RegistrationPage_NewLoan_ILP(driver, test, AppURL, SSN, FileName);
			        this.NewLoan_ILP(SSN, FileName, "200");
			        this.AgeStore_1stInstallment(SSN, FileName, 0);
				    this.Payoff(SSN, FileName);
				  //  this.History_Paymentcaluculation(SSN, FileName);

			}
		}

	}
	
@Test(priority = 26)
		public void Loan_PaymentinCSRPortel_Void() throws Exception {

			// Start test. Mention test script name
			String FileName = "AA_Loan_Payment_Void_Txn_Testdata.xls";
			Excel TestData = new Excel("E:/QC_Workspace/AA_Automation/TestData/OH_ILP/Local/" + FileName);
			int lastrow = TestData.getLastRow("NewLoan");
			String sheetName = "NewLoan";
			// int lastrow=TestData.getLastRow("Borrower");
			System.out.println(lastrow);
			for (int row = 2; row <= lastrow; row++) {
				String RunFlag = TestData.getCellData(sheetName, "Run", row);
				// System.out.println(RunFlag);
				if (RunFlag.equals("Y")) {
					// driver.get(appUrl);
					// test.log(LogStatus.INFO, "Application is launched");
					// driver.manage().window().maximize();
					String AppURL = TestData.getCellData(sheetName, "AppURL", row);
					String UserName = TestData.getCellData(sheetName, "UserName", row);
					String Password = TestData.getCellData(sheetName, "Password", row);
					String PayFrequency = TestData.getCellData(sheetName, "Income_PayFrequency", row);
					String CollateralType = TestData.getCellData(sheetName, "ESign_CollateralType", row);
					// System.out.println(Password);
					String StoreId = TestData.getCellData(sheetName, "StoreID", row);
					String ProductID = TestData.getCellData(sheetName, "ProductID", row);
					String StateID = TestData.getCellData(sheetName, "StateID", row);
					String SSN = TestData.getCellData(sheetName, "SSN", row);
					String Header = StateID + "_" + ProductID;
					// System.out.println(SSN);
					test = reports.startTest(Header + "_S.No:28" + "_" + PayFrequency + "_" + CollateralType,"Loan>select payment option from CSR dropdown> Payment screen should show the follwing options  1.Pay Off the balance 2.Pay Installment Am t3.Pay any other Amt>select payoff balance>Enter amount>");
					appUrl = AppURL;
					
					    CSRLoginpage login = new CSRLoginpage();
				        login.Login(UserName, Password, StoreId, driver, AppURL, test);
				        this.RegistrationPage_NewLoan_ILP(driver, test, AppURL, SSN, FileName);
				        this.NewLoan_ILP(SSN, FileName, "200");
				        this.AgeStore(SSN, FileName, -5);
					    this.Payoff(SSN, FileName);
				          this.PayAny_Void(SSN, FileName);
					    //this.History_Paymentcaluculation(SSN, FileName);
					    

				}
			}

		}
	
	/*//@Test(priority = 27) Dubilecate
		public void AA_Loan_1stInstallmentPayments_Void() throws Exception {

			// Start test. Mention test script name
			String FileName = "AA_Loan_1stInstallmentPayments_Void_Txn_Testdata.xls";
			Excel TestData = new Excel("E:/QC_Workspace/AA_Automation/TestData/OH_ILP/Local/" + FileName);
			int lastrow = TestData.getLastRow("NewLoan");
			String sheetName = "NewLoan";
			// int lastrow=TestData.getLastRow("Borrower");
			System.out.println(lastrow);
			for (int row = 2; row <= lastrow; row++) {
				String RunFlag = TestData.getCellData(sheetName, "Run", row);
				// System.out.println(RunFlag);
				if (RunFlag.equals("Y")) {
					// driver.get(appUrl);
					// test.log(LogStatus.INFO, "Application is launched");
					// driver.manage().window().maximize();
					String AppURL = TestData.getCellData(sheetName, "AppURL", row);
					String UserName = TestData.getCellData(sheetName, "UserName", row);
					String Password = TestData.getCellData(sheetName, "Password", row);
					String PayFrequency = TestData.getCellData(sheetName, "Income_PayFrequency", row);
					String CollateralType = TestData.getCellData(sheetName, "ESign_CollateralType", row);
					// System.out.println(Password);
					String StoreId = TestData.getCellData(sheetName, "StoreID", row);
					String ProductID = TestData.getCellData(sheetName, "ProductID", row);
					String StateID = TestData.getCellData(sheetName, "StateID", row);
					String SSN = TestData.getCellData(sheetName, "SSN", row);
					String Header = StateID + "_" + ProductID;
					// System.out.println(SSN);
					test = reports.startTest(Header + "_S.No:29" + "_" + PayFrequency + "_" + CollateralType,"Loan>1# payment on due date>void>payoff>void");
					appUrl = AppURL;
					
					    CSRLoginpage login = new CSRLoginpage();
				        login.Login(UserName, Password, StoreId, driver, AppURL, test);
				        this.RegistrationPage_NewLoan_ILP(driver, test, AppURL, SSN, FileName);
				        this.NewLoan_ILP(SSN, FileName, "200");
				        this.AgeStore_1stInstallment(SSN, FileName, 0);
					    this.Payoff(SSN, FileName);
					   // this.History_Paymentcaluculation(SSN, FileName);

				}
			}

		}
	*/
		@Test (priority=28,groups = "venkat_Oh_ILP")

	public void Loan_Pmt1stInstdate_Pmt2ndInstdate_void_EODBatch10days2Inst_payoff_() throws Exception {

		// Start test. Mention test script name
		String FileName= "AA_Loan_Pmt1stInstdate_Pmt2ndInstdate_void_EODBatch10days2Inst_payoff_TestData.xls";
		Excel TestData = new Excel("E:/QC_Workspace/AA_Automation/TestData/OH_ILP/Local/"+FileName);  
		int lastrow=TestData.getLastRow("NewLoan");
		String sheetName="NewLoan";   
		//int lastrow=TestData.getLastRow("Borrower");
		System.out.println(lastrow);
		for(int row=2;row<=lastrow;row++)
		{
			String RunFlag = TestData.getCellData(sheetName,"Run",row);
			//System.out.println(RunFlag);
		if(RunFlag.equals("Y"))
		{	
			//driver.get(appUrl);
			//test.log(LogStatus.INFO, "Application is launched");
			//driver.manage().window().maximize();
				String AppURL = TestData.getCellData(sheetName,"AppURL",row);
				String UserName = TestData.getCellData(sheetName,"UserName",row);
				String Password = TestData.getCellData(sheetName,"Password",row);
		       // System.out.println(Password);
		        String StoreId = TestData.getCellData(sheetName,"StoreID",row);
		        String ProductID = TestData.getCellData(sheetName,"ProductID",row);
		        String StateID = TestData.getCellData(sheetName,"StateID",row);
		        String SSN = TestData.getCellData(sheetName,"SSN",row);	
		        String PayFrequency = TestData.getCellData(sheetName,"Income_PayFrequency",row);
				String CollateralType = TestData.getCellData(sheetName,"ESign_CollateralType",row);
		        String Header = StateID+ "_" + ProductID;
		        //System.out.println(SSN);
		        test = reports.startTest(Header+"_S.No:30"+"_"+PayFrequency+"_"+CollateralType, "Loan_1# payment on due date_2#payment on due date_void_run EOD batch process on 10th day of 2# _payoff_(consider loan has only three installements)_void");
		        appUrl = AppURL;

		        CSRLoginpage login = new CSRLoginpage();
		       login.Login(UserName, Password, StoreId, driver, AppURL, test);
		        this.RegistrationPage_NewLoan_ILP(driver, test, AppURL, SSN, FileName);
		        this.NewLoan_ILP(SSN, FileName, "200");
		        this.AgeStore_ILP(SSN, FileName, 0, 2);
		        this.Payment_ILP(SSN, FileName);
		        this.AgeStore_ILP(SSN, FileName, 0, 3);
		        this.Payment_ILP(SSN, FileName);	
		        this.PayAny_Void(SSN, FileName);
		        this.EOD_BatchProcess_DueDate(SSN, FileName, 10, 3);
		        this.Payoff_Installments(SSN, FileName);
		        this.Loan_Balance_Status(SSN, FileName);
		        this.PayAny_Void(SSN, FileName);
		       // this.History2(SSN, FileName);
    		        	        	        
		}
		}
		

	}

		@Test (priority=29,groups = "venkat_Oh_ILP")

	public void Loan_Deposit_Rtn_payoff() throws Exception {
		
		// Start test. Mention test script name
		String FileName= "AA_Loan1stInsatallmentDeposit_Return_Payoff_Txn_Testdata.xls";
		Excel TestData = new Excel(System.getProperty("user.dir")+"/TestData/OH_ILP/Local/"+FileName);  	
		int lastrow=TestData.getLastRow("NewLoan");
		String sheetName="NewLoan";

		//int lastrow=TestData.getLastRow("Borrower");
		System.out.println(lastrow);
		for(int row=2;row<=lastrow;row++)
		{
			String RunFlag = TestData.getCellData(sheetName,"Run",row);
			//System.out.println(RunFlag);
		if(RunFlag.equals("Y"))
		{	
			//driver.get(appUrl);
			//test.log(LogStatus.INFO, "Application is launched");
			//driver.manage().window().maximize();
				
			
			    String PayFrequency = TestData.getCellData(sheetName,"Income_PayFrequency",row);
				String CollateralType = TestData.getCellData(sheetName,"ESign_CollateralType",row);
				String AppURL = TestData.getCellData(sheetName,"AppURL",row);
				String UserName = TestData.getCellData(sheetName,"UserName",row);
				String Password = TestData.getCellData(sheetName,"Password",row);
		       // System.out.println(Password);
		        String StoreId = TestData.getCellData(sheetName,"StoreID",row);
		        String ProductID = TestData.getCellData(sheetName,"ProductID",row);
		        String StateID = TestData.getCellData(sheetName,"StateID",row);
		        String SSN = TestData.getCellData(sheetName,"SSN",row);	
		        String Header = StateID+ "_" + ProductID;
		        //System.out.println(SSN);
		        test = reports.startTest(Header+"_S.No:31"+"_"+PayFrequency+"_"+CollateralType,"Loan>1#depsoit >rtn>payoff>");
		        appUrl = AppURL;
		        this.Login(UserName,Password,StoreId);
		        this.RegistrationPage_NewLoan_ILP(driver, test, AppURL, SSN, FileName);
		        this.NewLoan_ILP(SSN, FileName, "200");
		         this.AgeStore(SSN, FileName, -1);
		         this.DrawerDeassign(SSN, FileName);
		         this.StatementGeneration_EODProcessing(SSN, FileName);
		         this.StoreInfo(SSN, FileName);
		         this.Safeassign(SSN, FileName);
		         this.Drawerassign(SSN, FileName);
		         this.Payliance_OriginationFile(SSN, FileName, -1);
		          this.ACH_Deposit(SSN, FileName, 0);
		         this.AgeStore_1stInstallment(SSN, FileName, 8);
		         this.ACHReturnPosting(SSN, FileName);
		         this.Payoff_Return(SSN, FileName);
		        // this.History_Payoffcaluculation(SSN, FileName);
		}       
		}
		

			}
	
	
@Test (priority=30,groups = "venkat_Oh_ILP")

	public void Loan_Deposit_Rtn_clear_2InstDeposit_Return_EODBatchprocess_payoff() throws Exception {
		
		// Start test. Mention test script name
		String FileName= "AA_Loan1stInsatallmentDeposit_2ndInstDeposit_Return_EodBatch_3rdInst_Payoff_Txn_Testdata.xls";
		Excel TestData = new Excel(System.getProperty("user.dir")+"/TestData/OH_ILP/Local/"+FileName);  	
		int lastrow=TestData.getLastRow("NewLoan");
		String sheetName="NewLoan";

		//int lastrow=TestData.getLastRow("Borrower");
		System.out.println(lastrow);
		for(int row=2;row<=lastrow;row++)
		{
			String RunFlag = TestData.getCellData(sheetName,"Run",row);
			//System.out.println(RunFlag);
		if(RunFlag.equals("Y"))
		{	
			//driver.get(appUrl);
			//test.log(LogStatus.INFO, "Application is launched");
			//driver.manage().window().maximize();
				
			
			    String PayFrequency = TestData.getCellData(sheetName,"Income_PayFrequency",row);
				String CollateralType = TestData.getCellData(sheetName,"ESign_CollateralType",row);
				String AppURL = TestData.getCellData(sheetName,"AppURL",row);
				String UserName = TestData.getCellData(sheetName,"UserName",row);
				String Password = TestData.getCellData(sheetName,"Password",row);
		       // System.out.println(Password);
		        String StoreId = TestData.getCellData(sheetName,"StoreID",row);
		        String ProductID = TestData.getCellData(sheetName,"ProductID",row);
		        String StateID = TestData.getCellData(sheetName,"StateID",row);
		        String SSN = TestData.getCellData(sheetName,"SSN",row);	
		        String Header = StateID+ "_" + ProductID;
		        //System.out.println(SSN);
		        test = reports.startTest(Header+"_S.No:32"+"_"+PayFrequency+"_"+CollateralType,"Loan>1#deposit >clr>2# dep>rtn>run EOD batch process on 10th from 2# due date>payoff>age the store date to one day before 3# due date(banking day)>run EOD");
		        appUrl = AppURL;
		         this.Login(UserName,Password,StoreId);
		        this.RegistrationPage_NewLoan_ILP(driver, test, AppURL, SSN, FileName);
		        this.NewLoan_ILP(SSN, FileName, "200");
		         this.AgeStore(SSN, FileName, -1);
		         this.DrawerDeassign(SSN, FileName);
		         this.StatementGeneration_EODProcessing(SSN, FileName);
		         this.StoreInfo(SSN, FileName);
		         this.Safeassign(SSN, FileName);
		         this.Drawerassign(SSN, FileName);
		         this.Payliance_OriginationFile(SSN, FileName, -1);
		         this.ACH_Deposit(SSN, FileName, 0);
		         this.EOD_BatchProcess_DueDate(SSN, FileName, 8, 2);
		         this.AgeStore_2ndInstallment(SSN, FileName, -1);
		         this.DrawerDeassign(SSN, FileName);
		         this.StatementGeneration_EODProcessing(SSN, FileName);
		         this.StoreInfo(SSN, FileName);
		         this.Safeassign(SSN, FileName);
		         this.Drawerassign(SSN, FileName); 
		         this.Payliance_OriginationFile(SSN, FileName, -1, 3);
		         this.ACH_Deposit(SSN, FileName, 0);
		         this.ACHReturnPosting(SSN, FileName);
		         this.EOD_BatchProcess_DueDate(SSN, FileName, 10, 3);
		         this.Payoff_Return(SSN, FileName);
		         this.AgeStore_3rdInstallment(SSN, FileName, -1);
		         this.DrawerDeassign(SSN, FileName);
		         this.StatementGeneration_EODProcessing(SSN, FileName);
		         this.StoreInfo(SSN, FileName);
		         this.Safeassign(SSN, FileName);
		         this.Drawerassign(SSN, FileName);
		         //this.History_Payoffcaluculation_3rdInst(SSN, FileName);
		}       
		}
		

			}	
	
	
	
@Test (priority=31,groups = "venkat_Oh_ILP")

	public void Loan_Deposit_Rtn_Payoff_Void() throws Exception {
		
		// Start test. Mention test script name
		String FileName= "AA_Loan1stInsatallmentDeposit_Return_Payoff_void_Txn_Testdata.xls";
		Excel TestData = new Excel(System.getProperty("user.dir")+"/TestData/OH_ILP/Local/"+FileName);  	
		int lastrow=TestData.getLastRow("NewLoan");
		String sheetName="NewLoan";

		//int lastrow=TestData.getLastRow("Borrower");
		System.out.println(lastrow);
		for(int row=2;row<=lastrow;row++)
		{
			String RunFlag = TestData.getCellData(sheetName,"Run",row);
			//System.out.println(RunFlag);
		if(RunFlag.equals("Y"))
		{	
			//driver.get(appUrl);
			//test.log(LogStatus.INFO, "Application is launched");
			//driver.manage().window().maximize();
				
			
			    String PayFrequency = TestData.getCellData(sheetName,"Income_PayFrequency",row);
				String CollateralType = TestData.getCellData(sheetName,"ESign_CollateralType",row);
				String AppURL = TestData.getCellData(sheetName,"AppURL",row);
				String UserName = TestData.getCellData(sheetName,"UserName",row);
				String Password = TestData.getCellData(sheetName,"Password",row);
		       // System.out.println(Password);
		        String StoreId = TestData.getCellData(sheetName,"StoreID",row);
		        String ProductID = TestData.getCellData(sheetName,"ProductID",row);
		        String StateID = TestData.getCellData(sheetName,"StateID",row);
		        String SSN = TestData.getCellData(sheetName,"SSN",row);	
		        String Header = StateID+ "_" + ProductID;
		        //System.out.println(SSN);
		        test = reports.startTest(Header+"_S.No:33"+"_"+PayFrequency+"_"+CollateralType,"Loan>1#depsoit >rtn>payoff>void");
		        appUrl = AppURL;
		        this.Login(UserName,Password,StoreId);
		        this.RegistrationPage_NewLoan_ILP(driver, test, AppURL, SSN, FileName);
		        this.NewLoan_ILP(SSN, FileName, "200");
		         this.AgeStore(SSN, FileName, -1);
		         this.DrawerDeassign(SSN, FileName);
		         this.StatementGeneration_EODProcessing(SSN, FileName);
		         this.StoreInfo(SSN, FileName);
		         this.Safeassign(SSN, FileName);
		         this.Drawerassign(SSN, FileName);
		         this.Payliance_OriginationFile(SSN, FileName, -1);
		         this.ACH_Deposit(SSN, FileName, 0);
		         this.AgeStore_1stInstallment(SSN, FileName, 8);
		         this.ACHReturnPosting(SSN, FileName);
		         this.Payoff_Return(SSN, FileName);
		         this.PayAny_Void(SSN, FileName);
		        // this.Void(SSN, FileName);
		        // this.History_Payoffcaluculation(SSN, FileName);
		}       
		}
	}
	
@Test (priority=32,groups = "venkat_Oh_ILP")

	  public void Loan_DepositACH_() throws Exception {

	  	// Start test. Mention test script name
	  	String FileName= "AA_Loan_DepositACH_TestData.xls";
	  	Excel TestData = new Excel("E:/QC_Workspace/AA_Automation/TestData/OH_ILP/Local/"+FileName);  
	  	int lastrow=TestData.getLastRow("NewLoan");
	  	String sheetName="NewLoan";   
	  	//int lastrow=TestData.getLastRow("Borrower");
	  	System.out.println(lastrow);
	  	for(int row=2;row<=lastrow;row++)
	  	{
	  		String RunFlag = TestData.getCellData(sheetName,"Run",row);
	  		//System.out.println(RunFlag);
	  	if(RunFlag.equals("Y"))
	  	{	
	  		//driver.get(appUrl);
	  		//test.log(LogStatus.INFO, "Application is launched");
	  		//driver.manage().window().maximize();
	  			String AppURL = TestData.getCellData(sheetName,"AppURL",row);
	  			String UserName = TestData.getCellData(sheetName,"UserName",row);
	  			String Password = TestData.getCellData(sheetName,"Password",row);
	  	       // System.out.println(Password);
	  	        String StoreId = TestData.getCellData(sheetName,"StoreID",row);
	  	        String ProductID = TestData.getCellData(sheetName,"ProductID",row);
	  	        String StateID = TestData.getCellData(sheetName,"StateID",row);
	  	        String SSN = TestData.getCellData(sheetName,"SSN",row);	
	  	        String PayFrequency = TestData.getCellData(sheetName,"Income_PayFrequency",row);
	  			String CollateralType = TestData.getCellData(sheetName,"ESign_CollateralType",row);
	  	        String Header = StateID+ "_" + ProductID;
	  	        //System.out.println(SSN);
	  	        test = reports.startTest(Header+"_S.No:35"+"_"+PayFrequency+"_"+CollateralType, "Loan_age the store date to one day before 1# due date(banking day)_Run EOD process_Run payliance origination file_Process depsoit on due by clicking on Process ILP pre ach depsoits");
	  	        appUrl = AppURL;

	  	        CSRLoginpage login = new CSRLoginpage();
	  	        login.Login(UserName, Password, StoreId, driver, AppURL, test);
	  	      this.RegistrationPage_NewLoan_ILP(driver, test, AppURL, SSN, FileName);
	  	        this.NewLoan_ILP(SSN, FileName, "200");
	  	        this.AgeStore_ILP(SSN, FileName, -1, 2);
	  	        this.DrawerDeassign(SSN, FileName);
	  	        this.StatementGeneration_EODProcessing(SSN, FileName);
	  	        this.StoreInfo(SSN, FileName);
	  	        this.Safeassign(SSN, FileName);
	  	        this.Drawerassign(SSN, FileName);
	  	        this.Payliance_OriginationFile(SSN, FileName, -1);
	  	        this.ACH_Deposit(SSN, FileName, 0);
	  	       // this.Check_TransactionRecords(SSN, FileName);
	  	       		        		        	        	        
	  	}
	  	}
	  	
	 }

@Test (priority=33,groups = "venkat_Oh_ILP")

	  public void Loan_1stInstpartialpayment_1stInstdeposit_() throws Exception {

	  	// Start test. Mention test script name
	  	String FileName= "AA_Loan_1stInstpartialpayment_1stInstdeposit_TestData.xls";
	  	Excel TestData = new Excel("E:/QC_Workspace/AA_Automation/TestData/OH_ILP/Local/"+FileName);  
	  	int lastrow=TestData.getLastRow("NewLoan");
	  	String sheetName="NewLoan";   
	  	//int lastrow=TestData.getLastRow("Borrower");
	  	System.out.println(lastrow);
	  	for(int row=2;row<=lastrow;row++)
	  	{
	  		String RunFlag = TestData.getCellData(sheetName,"Run",row);
	  		//System.out.println(RunFlag);
	  	if(RunFlag.equals("Y"))
	  	{	
	  		//driver.get(appUrl);
	  		//test.log(LogStatus.INFO, "Application is launched");
	  		//driver.manage().window().maximize();
	  			String AppURL = TestData.getCellData(sheetName,"AppURL",row);
	  			String UserName = TestData.getCellData(sheetName,"UserName",row);
	  			String Password = TestData.getCellData(sheetName,"Password",row);
	  	       // System.out.println(Password);
	  	        String StoreId = TestData.getCellData(sheetName,"StoreID",row);
	  	        String ProductID = TestData.getCellData(sheetName,"ProductID",row);
	  	        String StateID = TestData.getCellData(sheetName,"StateID",row);
	  	        String SSN = TestData.getCellData(sheetName,"SSN",row);	
	  	        String PayFrequency = TestData.getCellData(sheetName,"Income_PayFrequency",row);
	  			String CollateralType = TestData.getCellData(sheetName,"ESign_CollateralType",row);
	  	        String Header = StateID+ "_" + ProductID;
	  	        //System.out.println(SSN);
	  	        test = reports.startTest(Header+"_S.No:36"+"_"+PayFrequency+"_"+CollateralType, "Loan_1st Inst partial payment_1st Inst deposit");
	  	        appUrl = AppURL;

	  	        CSRLoginpage login = new CSRLoginpage();
	  	        login.Login(UserName, Password, StoreId, driver, AppURL, test);
	  	        this.RegistrationPage_NewLoan_ILP(driver, test, AppURL, SSN, FileName);
	  	        this.NewLoan_ILP(SSN, FileName, "200");
	  	        this.AgeStore_ILP(SSN, FileName, 0, 2);
	  	        this.PartialPayment(SSN, FileName);
	  	        this.AgeStore_ILP(SSN, FileName, -1, 2);
	  	        this.DrawerDeassign(SSN, FileName);
	  	        this.StatementGeneration_EODProcessing_RecordVerify(SSN, FileName);
	  	        this.StoreInfo(SSN, FileName);
	  	        this.Safeassign(SSN, FileName);
	  	        this.Drawerassign(SSN, FileName);
	  	        this.Payliance_OriginationFile(SSN, FileName, -1);
	  	        this.ACH_Deposit(SSN, FileName, 0);
	  	      //  this.Check_TransactionRecords(SSN, FileName);
	  	       		        		        	        	        
	  	}
	  	}
	  	

	  }

	  	
	 @Test (priority=34,groups = "venkat_Oh_ILP") //dubilacate

	  public void Loan_1stInstpaymentFullCash_1stInstdeposit_() throws Exception {

	  	// Start test. Mention test script name
	  	String FileName= "AA_Loan_1stInstpaymentFullCash_1stInstdeposit_TestData.xls";
	  	Excel TestData = new Excel("E:/QC_Workspace/AA_Automation/TestData/OH_ILP/Local/"+FileName);  
	  	int lastrow=TestData.getLastRow("NewLoan");
	  	String sheetName="NewLoan";   
	  	//int lastrow=TestData.getLastRow("Borrower");
	  	System.out.println(lastrow);
	  	for(int row=2;row<=lastrow;row++)
	  	{
	  		String RunFlag = TestData.getCellData(sheetName,"Run",row);
	  		//System.out.println(RunFlag);
	  	if(RunFlag.equals("Y"))
	  	{	
	  		//driver.get(appUrl);
	  		//test.log(LogStatus.INFO, "Application is launched");
	  		//driver.manage().window().maximize();
	  			String AppURL = TestData.getCellData(sheetName,"AppURL",row);
	  			String UserName = TestData.getCellData(sheetName,"UserName",row);
	  			String Password = TestData.getCellData(sheetName,"Password",row);
	  	       // System.out.println(Password);
	  	        String StoreId = TestData.getCellData(sheetName,"StoreID",row);
	  	        String ProductID = TestData.getCellData(sheetName,"ProductID",row);
	  	        String StateID = TestData.getCellData(sheetName,"StateID",row);
	  	        String SSN = TestData.getCellData(sheetName,"SSN",row);	
	  	        String PayFrequency = TestData.getCellData(sheetName,"Income_PayFrequency",row);
	  			String CollateralType = TestData.getCellData(sheetName,"ESign_CollateralType",row);
	  	        String Header = StateID+ "_" + ProductID;
	  	        //System.out.println(SSN);
	  	        test = reports.startTest(Header+"_S.No:37"+"_"+PayFrequency+"_"+CollateralType, "Loan_1st Inst  full cash payment_1st Inst deposit");
	  	        appUrl = AppURL;

	  	        CSRLoginpage login = new CSRLoginpage();
	  	        login.Login(UserName, Password, StoreId, driver, AppURL, test);
	  	        this.RegistrationPage_NewLoan_ILP(driver, test, AppURL, SSN, FileName);
	  	      this.NewLoan_ILP(SSN, FileName, "200");
	  	        this.AgeStore_ILP(SSN, FileName, 0, 2);
	  	        this.Payment_ILP(SSN, FileName);
	  	        this.AgeStore_ILP(SSN, FileName, -1, 2);
	  	        this.DrawerDeassign(SSN, FileName);
	  	      //  this.StatementGeneration_EODProcessing_RecordVerify(SSN, FileName);
	  	        this.StatementGeneration_EODProcessing(SSN, FileName);
	  	        this.StoreInfo(SSN, FileName);
	  	        this.Safeassign(SSN, FileName);
	  	        this.Drawerassign(SSN, FileName);
	  	        this.Payliance_OriginationFile(SSN, FileName, -1);
	  	        this.ACH_Deposit(SSN, FileName, 0);
	  	       // this.Check_TransactionRecords(SSN, FileName);
	  	        
	  	}
	  	}
	  	

	 }	
			
@Test(priority = 35)
				public void AA_Loan_ACHRevoke_1stInsatallmentDeposit() throws Exception {

					// Start test. Mention test script name
					String FileName = "AA_Loan_ACHRevoke__1stInsatllmentDeposit_Txn_Testdata.xls";
					Excel TestData = new Excel("E:/QC_Workspace/AA_Automation/TestData/OH_ILP/Local/" + FileName);
					int lastrow = TestData.getLastRow("NewLoan");
					String sheetName = "NewLoan";
					// int lastrow=TestData.getLastRow("Borrower");
					System.out.println(lastrow);
					for (int row = 2; row <= lastrow; row++) {
						String RunFlag = TestData.getCellData(sheetName, "Run", row);
						// System.out.println(RunFlag);
						if (RunFlag.equals("Y")) {
							// driver.get(appUrl);
							// test.log(LogStatus.INFO, "Application is launched");
							// driver.manage().window().maximize();
							String AppURL = TestData.getCellData(sheetName, "AppURL", row);
							String UserName = TestData.getCellData(sheetName, "UserName", row);
							String Password = TestData.getCellData(sheetName, "Password", row);
							String PayFrequency = TestData.getCellData(sheetName, "Income_PayFrequency", row);
							String CollateralType = TestData.getCellData(sheetName, "ESign_CollateralType", row);
							// System.out.println(Password);
							String StoreId = TestData.getCellData(sheetName, "StoreID", row);
							String ProductID = TestData.getCellData(sheetName, "ProductID", row);
							String StateID = TestData.getCellData(sheetName, "StateID", row);
							String SSN = TestData.getCellData(sheetName, "SSN", row);
							String Header = StateID + "_" + ProductID;
							// System.out.println(SSN);
							test = reports.startTest(Header + "_S.No:38" + "_" + PayFrequency + "_" + CollateralType,"Loan>ach revoke >1# deposit");
							appUrl = AppURL;
							
							    CSRLoginpage login = new CSRLoginpage();
						        login.Login(UserName, Password, StoreId, driver, AppURL, test);
						        this.RegistrationPage_NewLoan_ILP(driver, test, AppURL, SSN, FileName);
						        this.NewLoan_ILP(SSN, FileName, "200");
						        this.ACH_Revoke(SSN, FileName);
						        this.AgeStore_1stInstallment(SSN, FileName, -1);
						        this.DrawerDeassign(SSN, FileName);
						      //  this.EODProcessing_with_recordsChecking(SSN, FileName); 
						        this.StatementGeneration_EODProcessing(SSN, FileName);
						        this.StoreInfo(SSN, FileName);
						        this.Safeassign(SSN, FileName);
						        this.Drawerassign(SSN, FileName);
						        
						}
					}

				}
	
	
				
@Test(priority = 36)
		public void AA_Loan_ACHRevoke_1stInsatallmentPayment_ACHAuthorization_2ndIsatallmentDeposit() throws Exception {

					// Start test. Mention test script name
					String FileName = "AA_Loan_ACHRevoke__1stInsatllmentPayment_ACHAuthorigation_ACHDeposit_Txn_Testdata.xls";
					Excel TestData = new Excel("E:/QC_Workspace/AA_Automation/TestData/OH_ILP/Local/" + FileName);
					int lastrow = TestData.getLastRow("NewLoan");
					String sheetName = "NewLoan";
					// int lastrow=TestData.getLastRow("Borrower");
					System.out.println(lastrow);
					for (int row = 2; row <= lastrow; row++) {
						String RunFlag = TestData.getCellData(sheetName, "Run", row);
						// System.out.println(RunFlag);
						if (RunFlag.equals("Y")) {
							// driver.get(appUrl);
							// test.log(LogStatus.INFO, "Application is launched");
							// driver.manage().window().maximize();
							String AppURL = TestData.getCellData(sheetName, "AppURL", row);
							String UserName = TestData.getCellData(sheetName, "UserName", row);
							String Password = TestData.getCellData(sheetName, "Password", row);
							String PayFrequency = TestData.getCellData(sheetName, "Income_PayFrequency", row);
							String CollateralType = TestData.getCellData(sheetName, "ESign_CollateralType", row);
							// System.out.println(Password);
							String StoreId = TestData.getCellData(sheetName, "StoreID", row);
							String ProductID = TestData.getCellData(sheetName, "ProductID", row);
							String StateID = TestData.getCellData(sheetName, "StateID", row);
							String SSN = TestData.getCellData(sheetName, "SSN", row);
							String Header = StateID + "_" + ProductID;
							// System.out.println(SSN);
							test = reports.startTest(Header + "_S.No:39" + "_" + PayFrequency + "_" + CollateralType,"Loan>ach revoke >1# payment>ach auth>2# deposit");
							appUrl = AppURL;
							
							    CSRLoginpage login = new CSRLoginpage();
						        login.Login(UserName, Password, StoreId, driver, AppURL, test);
						        this.RegistrationPage_NewLoan_ILP(driver, test, AppURL, SSN, FileName);
						        this.NewLoan_ILP(SSN, FileName, "200");
						        this.ACH_Revoke(SSN, FileName);
						        this.AgeStore_1stInstallment(SSN, FileName, 0);
						        this.Payment_ILP(SSN, FileName); 
							    this.ACHAuthorization(SSN, FileName);
							    this.AgeStore_2ndInstallment(SSN, FileName, -1);
							    this.DrawerDeassign(SSN, FileName);
							    this.StatementGeneration_EODProcessing(SSN, FileName); 
							    this.StoreInfo(SSN, FileName);
							    this.Safeassign(SSN, FileName);
						        this.Drawerassign(SSN, FileName);
						        this.Payliance_OriginationFile(SSN, FileName, -1);
						        this.ACH_Deposit(SSN, FileName, 0);
							 
						}
					}

				}
		
		@Test (priority=37,groups = "venkat_Oh_ILP")//dubilicate
		
				public void CO_ILP_Loan_Instwisepayment_last_deposit() throws Exception {
					
					
						// Start test. Mention test script name
						String FileName= "AA_CO_ILP_Loan_Instwisepayment_LastInst_deposit_Testdata.xls";
						Excel TestData = new Excel(System.getProperty("user.dir")+"/TestData/OH_ILP/Local/"+FileName); 
						int lastrow=TestData.getLastRow("NewLoan");
						String sheetName="NewLoan";
						
						System.out.println(lastrow);
						for(int row=2;row<=lastrow;row++)
						{
							String RunFlag = TestData.getCellData(sheetName,"Run",row);

						if(RunFlag.equals("Y"))
						{	

								String AppURL = TestData.getCellData(sheetName,"AppURL",row);
								String UserName = TestData.getCellData(sheetName,"UserName",row);
								String Password = TestData.getCellData(sheetName,"Password",row);
						        String StoreId = TestData.getCellData(sheetName,"StoreID",row);
						        String ProductID = TestData.getCellData(sheetName,"ProductID",row);
						        String StateID = TestData.getCellData(sheetName,"StateID",row);
						        String SSN = TestData.getCellData(sheetName,"SSN",row);	
						        String Header = StateID+ "_" + ProductID;
						        String PayFrequency = TestData.getCellData(sheetName,"Income_PayFrequency",row);
								String CollateralType = TestData.getCellData(sheetName,"ESign_CollateralType",row);		 

								test = reports.startTest(Header+"_S.No:40"+"_"+PayFrequency+"_"+CollateralType,"Loan>payment all the installements acc to respective due dates except last installement>last # deposit");

						         
						         appUrl = AppURL;
						         CSRLoginpage login = new CSRLoginpage();
			                     login.Login(UserName, Password, StoreId, driver, AppURL, test);
			                     this.RegistrationPage_NewLoan_ILP(driver, test, AppURL, SSN, FileName);
			                    // this.NewLoan_ILP_NegAmt(SSN, FileName, "200");
						         this.NewLoan_ILP(SSN, FileName, "200");
			                     this.AgeStore_ILP(SSN, FileName, 0, 2);
						         this.installmentPayment(SSN, FileName);
						         this.AgeStore_ILP(SSN, FileName, 0, 3);
						         this.installmentPayment(SSN, FileName);
						         this.AgeStore_ILP(SSN, FileName, 0, 4);
						         this.installmentPayment(SSN, FileName);
						         this.AgeStore_ILP(SSN, FileName, -1, 5);
						         this.DrawerDeassign(SSN, FileName);
						         this.StatementGeneration_EODProcessing(SSN, FileName);
						         this.StoreInfo(SSN, FileName);
						         this.Safeassign(SSN, FileName);
						         this.Drawerassign(SSN, FileName);
						
						 }
						
						}	
					}
		
		@Test (priority=38,groups = "venkat_Oh_ILP")

		public void Loan_1stInstDeposit_Rtn() throws Exception {
			
			// Start test. Mention test script name
			String FileName= "AA_Loan_1stInsatallmentDeposit_Return_Txn_Testdata.xls";
			Excel TestData = new Excel(System.getProperty("user.dir")+"/TestData/OH_ILP/Local/"+FileName);  	
			int lastrow=TestData.getLastRow("NewLoan");
			String sheetName="NewLoan";

			//int lastrow=TestData.getLastRow("Borrower");
			System.out.println(lastrow);
			for(int row=2;row<=lastrow;row++)
			{
				String RunFlag = TestData.getCellData(sheetName,"Run",row);
				//System.out.println(RunFlag);
			if(RunFlag.equals("Y"))
			{	
				//driver.get(appUrl);
				//test.log(LogStatus.INFO, "Application is launched");
				//driver.manage().window().maximize();
					
				
				    String PayFrequency = TestData.getCellData(sheetName,"Income_PayFrequency",row);
					String CollateralType = TestData.getCellData(sheetName,"ESign_CollateralType",row);
					String AppURL = TestData.getCellData(sheetName,"AppURL",row);
					String UserName = TestData.getCellData(sheetName,"UserName",row);
					String Password = TestData.getCellData(sheetName,"Password",row);
			       // System.out.println(Password);
			        String StoreId = TestData.getCellData(sheetName,"StoreID",row);
			        String ProductID = TestData.getCellData(sheetName,"ProductID",row);
			        String StateID = TestData.getCellData(sheetName,"StateID",row);
			        String SSN = TestData.getCellData(sheetName,"SSN",row);	
			        String Header = StateID+ "_" + ProductID;
			        //System.out.println(SSN);
			        test = reports.startTest(Header+"_S.No:41"+"_"+PayFrequency+"_"+CollateralType,"Laon>1# deposit>Return");
			        appUrl = AppURL;
			        this.Login(UserName,Password,StoreId);
			        this.RegistrationPage_NewLoan_ILP(driver, test, AppURL, SSN, FileName);
			        this.NewLoan_ILP(SSN, FileName, "200");
			         this.AgeStore(SSN, FileName, -1);
			         this.DrawerDeassign(SSN, FileName);
			         this.StatementGeneration_EODProcessing(SSN, FileName);
			         this.StoreInfo(SSN, FileName);
			         this.Safeassign(SSN, FileName);
			         this.Drawerassign(SSN, FileName);
			         this.Payliance_OriginationFile(SSN, FileName, -1);
			         this.ACH_Deposit(SSN, FileName, 0);
			         this.ACHReturnPosting(SSN, FileName);
			      //   this.History_LoanStatus(SSN, FileName);
			         
			}       
			}
			

				}	
		
		 @Test (priority=39,groups = "venkat_Oh_ILP")

		  public void Loan_1stParPmt_1stDep_Ret_() throws Exception {

		  	// Start test. Mention test script name
		  	String FileName= "AA_Loan_1stParPmt_1stDep_Ret_TestData.xls";
		  	Excel TestData = new Excel("E:/QC_Workspace/AA_Automation/TestData/OH_ILP/Local/"+FileName);  
		  	int lastrow=TestData.getLastRow("NewLoan");
		  	String sheetName="NewLoan";   
		  	//int lastrow=TestData.getLastRow("Borrower");
		  	System.out.println(lastrow);
		  	for(int row=2;row<=lastrow;row++)
		  	{
		  		String RunFlag = TestData.getCellData(sheetName,"Run",row);
		  		//System.out.println(RunFlag);
		  	if(RunFlag.equals("Y"))
		  	{	
		  		//driver.get(appUrl);
		  		//test.log(LogStatus.INFO, "Application is launched");
		  		//driver.manage().window().maximize();
		  			String AppURL = TestData.getCellData(sheetName,"AppURL",row);
		  			String UserName = TestData.getCellData(sheetName,"UserName",row);
		  			String Password = TestData.getCellData(sheetName,"Password",row);
		  	       // System.out.println(Password);
		  	        String StoreId = TestData.getCellData(sheetName,"StoreID",row);
		  	        String ProductID = TestData.getCellData(sheetName,"ProductID",row);
		  	        String StateID = TestData.getCellData(sheetName,"StateID",row);
		  	        String SSN = TestData.getCellData(sheetName,"SSN",row);	
		  	        String PayFrequency = TestData.getCellData(sheetName,"Income_PayFrequency",row);
		  			String CollateralType = TestData.getCellData(sheetName,"ESign_CollateralType",row);
		  	        String Header = StateID+ "_" + ProductID;
		  	        //System.out.println(SSN);
		  	        test = reports.startTest(Header+"_S.No:42"+"_"+PayFrequency+"_"+CollateralType, "Loan_1# partial payment_1# deposit_Return");
		  	        appUrl = AppURL;

		  	        CSRLoginpage login = new CSRLoginpage();
		  	        login.Login(UserName, Password, StoreId, driver, AppURL, test);
		  	        this.RegistrationPage_NewLoan_ILP(driver, test, AppURL, SSN, FileName);
		  	         this.NewLoan_ILP(SSN, FileName, "200");
		  	        this.AgeStore_ILP(SSN, FileName, -6, 2);
		  	        this.PayAnyAmt_Installments(SSN, FileName,"15");
		  	        this.AgeStore_ILP(SSN, FileName, -1, 2);
		  	        this.DrawerDeassign(SSN, FileName);
		  	        this.StatementGeneration_EODProcessing(SSN, FileName);
		  	        this.StoreInfo(SSN, FileName);
		  	        this.Safeassign(SSN, FileName);
		  	        this.Drawerassign(SSN, FileName);
		  	        this.Payliance_OriginationFile(SSN, FileName, -1);
		  	        this.ACH_Deposit(SSN, FileName, 0);
		  	     //   this.AgeStore_ILP(SSN, FileName, 8, 2);
		  	        this.ACHReturnPosting(SSN, FileName);
		  	      //  this.Check_TransactionRecords(SSN, FileName);
		  	        this.Loan_Balance_Status(SSN, FileName);
		  	       
		  	       		        		        	        	        
		  	}
		  	}
		  	

		  		}		
		
/*	//  @Test (priority=40,groups = "venkat_Oh_ILP")//Dubilicate

			public void Loan_PaymentallInstOnduedate_ExceptLastInst_LastDeposit_Return() throws Exception {
				
				// Start test. Mention test script name
				String FileName= "AA_Loan_PaymentallInstOnduedate_ExceptLastInst_LastDeposit_Return_Testdata.xls";
				Excel TestData = new Excel(System.getProperty("user.dir")+"/TestData/OH_ILP/Local/"+FileName);  	
				int lastrow=TestData.getLastRow("NewLoan");
				String sheetName="NewLoan";

				//int lastrow=TestData.getLastRow("Borrower");
				System.out.println(lastrow);
				for(int row=2;row<=lastrow;row++)
				{
					String RunFlag = TestData.getCellData(sheetName,"Run",row);
					//System.out.println(RunFlag);
				if(RunFlag.equals("Y"))
				{	
					//driver.get(appUrl);
					//test.log(LogStatus.INFO, "Application is launched");
					//driver.manage().window().maximize();
						
					
					    String PayFrequency = TestData.getCellData(sheetName,"Income_PayFrequency",row);
						String CollateralType = TestData.getCellData(sheetName,"ESign_CollateralType",row);
						String AppURL = TestData.getCellData(sheetName,"AppURL",row);
						String UserName = TestData.getCellData(sheetName,"UserName",row);
						String Password = TestData.getCellData(sheetName,"Password",row);
				       // System.out.println(Password);
				        String StoreId = TestData.getCellData(sheetName,"StoreID",row);
				        String ProductID = TestData.getCellData(sheetName,"ProductID",row);
				        String StateID = TestData.getCellData(sheetName,"StateID",row);
				        String SSN = TestData.getCellData(sheetName,"SSN",row);	
				        String Header = StateID+ "_" + ProductID;
				        //System.out.println(SSN);
				        test = reports.startTest(Header+"_S.No:43"+"_"+PayFrequency+"_"+CollateralType,"Loan_payment all the installements acc to respective due dates except last installement_last # deposit_Return");
				        appUrl = AppURL;
				        this.Login(UserName,Password,StoreId);
				        this.RegistrationPage_NewLoan_ILP(driver, test, AppURL, SSN, FileName);
			  	         this.NewLoan_ILP(SSN, FileName, "200");
				        this.AgeStore_ILP(SSN, FileName, 0, 2);
				        this.Payment_Inst_Amount(SSN, FileName, 2);
				        this.AgeStore_ILP(SSN, FileName, 0, 3);
				        this.Payment_Inst_Amount(SSN, FileName, 3);
				        this.AgeStore_ILP(SSN, FileName, 0, 4);
				        this.Payment_Inst_Amount(SSN, FileName, 4);
				        
				         this.AgeStore_ILP(SSN, FileName, -1, 5);
				         this.DrawerDeassign(SSN, FileName);
				         this.StatementGeneration_EODProcessing(SSN, FileName);
				         this.StoreInfo(SSN, FileName);
				         this.Safeassign(SSN, FileName);
				         this.Drawerassign(SSN, FileName);
				         this.Payliance_OriginationFile(SSN, FileName, -1,5);
				         this.ACH_Deposit(SSN, FileName, 0);
				     //    this.AgeStore_ILP(SSN, FileName, 8, 5);
				         this.ACHReturnPosting(SSN, FileName);
				         this.Loan_Balance_Status(SSN, FileName);
				         this.Check_Payment(SSN, FileName);
				        
				       
				        
				}       
				}
				

					}
		*/
				
	@Test(priority=41,groups = "venkat_Oh_ILP")
				public void AA_Loan_ACHRevoke_1stInsatallmentDeposit_Clear() throws Exception {

					// Start test. Mention test script name
					String FileName = "AA_Loan_ACHRevoke__1stInsatllmentDeposit_Clear_Txn_Testdata.xls";
					Excel TestData = new Excel("E:/QC_Workspace/AA_Automation/TestData/OH_ILP/Local/" + FileName);
					int lastrow = TestData.getLastRow("NewLoan");
					String sheetName = "NewLoan";
					// int lastrow=TestData.getLastRow("Borrower");
					System.out.println(lastrow);
					for (int row = 2; row <= lastrow; row++) {
						String RunFlag = TestData.getCellData(sheetName, "Run", row);
						// System.out.println(RunFlag);
						if (RunFlag.equals("Y")) {
							// driver.get(appUrl);
							// test.log(LogStatus.INFO, "Application is launched");
							// driver.manage().window().maximize();
							String AppURL = TestData.getCellData(sheetName, "AppURL", row);
							String UserName = TestData.getCellData(sheetName, "UserName", row);
							String Password = TestData.getCellData(sheetName, "Password", row);
							String PayFrequency = TestData.getCellData(sheetName, "Income_PayFrequency", row);
							String CollateralType = TestData.getCellData(sheetName, "ESign_CollateralType", row);
							// System.out.println(Password);
							String StoreId = TestData.getCellData(sheetName, "StoreID", row);
							String ProductID = TestData.getCellData(sheetName, "ProductID", row);
							String StateID = TestData.getCellData(sheetName, "StateID", row);
							String SSN = TestData.getCellData(sheetName, "SSN", row);
							String Header = StateID + "_" + ProductID;
							// System.out.println(SSN);
							test = reports.startTest(Header + "_S.No:44" + "_" + PayFrequency + "_" + CollateralType,"Laon>1# deposit>Clear");
							appUrl = AppURL;
							
							    CSRLoginpage login = new CSRLoginpage();
						        login.Login(UserName, Password, StoreId, driver, AppURL, test);
						        this.RegistrationPage_NewLoan_ILP(driver, test, AppURL, SSN, FileName);
						        this.NewLoan_ILP(SSN, FileName, "200");
						        this.AgeStore_1stInstallment(SSN, FileName, -1);
							    this.DrawerDeassign(SSN, FileName);
							    this.StatementGeneration_EODProcessing(SSN, FileName);  
							    this.StoreInfo(SSN, FileName);
							    this.Safeassign(SSN, FileName);
						        this.Drawerassign(SSN, FileName);
						        this.Payliance_OriginationFile(SSN, FileName, -1);
						        this.ACH_Deposit(SSN, FileName, 0);
							    this.EOD_BatchProcess_DueDate(SSN, FileName, 8, 2);
							 
						}
					}

				}	
		}
